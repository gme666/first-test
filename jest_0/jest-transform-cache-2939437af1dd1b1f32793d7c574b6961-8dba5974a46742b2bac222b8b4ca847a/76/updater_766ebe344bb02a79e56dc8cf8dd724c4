18a1ce63fefafbca91a42a07acfe7501
Object.defineProperty(exports,"__esModule",{value:true});exports.default=

shouldComponentUpdate;var _interface=require('../interface');function shouldComponentUpdate(nextProps,nextState){var _this=this;
var shouldUpdate=(nextProps.selected||[]).reduce(function(prev,next,i){
var currentSelected=(_this.props.selected||[])[i];
if(!currentSelected||!next||(0,_interface.parseDate)(currentSelected).getTime()!==(0,_interface.parseDate)(next).getTime()){
return{
update:true,
field:'selected'};

}
return prev;
},{update:false});

shouldUpdate=['markedDates','hideExtraDays'].reduce(function(prev,next){
if(!prev.update&&nextProps[next]!==_this.props[next]){
return{
update:true,
field:next};

}
return prev;
},shouldUpdate);

shouldUpdate=['minDate','maxDate','current'].reduce(function(prev,next){
var prevDate=(0,_interface.parseDate)(_this.props[next]);
var nextDate=(0,_interface.parseDate)(nextProps[next]);
if(prev.update){
return prev;
}else if(prevDate!==nextDate){
if(prevDate&&nextDate&&prevDate.getTime()===nextDate.getTime()){
return prev;
}else{
return{
update:true,
field:next};

}
}
return prev;
},shouldUpdate);

if(nextState.currentMonth!==this.state.currentMonth){
shouldUpdate={
update:true,
field:'current'};

}

return shouldUpdate.update;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZXIuanMiXSwibmFtZXMiOlsic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwibmV4dFByb3BzIiwibmV4dFN0YXRlIiwic2hvdWxkVXBkYXRlIiwic2VsZWN0ZWQiLCJyZWR1Y2UiLCJwcmV2IiwibmV4dCIsImkiLCJjdXJyZW50U2VsZWN0ZWQiLCJwcm9wcyIsImdldFRpbWUiLCJ1cGRhdGUiLCJmaWVsZCIsInByZXZEYXRlIiwibmV4dERhdGUiLCJjdXJyZW50TW9udGgiLCJzdGF0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFFd0JBLHFCLENBRnhCLHVDQUVlLFFBQVNBLHNCQUFULENBQStCQyxTQUEvQixDQUEwQ0MsU0FBMUMsQ0FBcUQ7QUFDbEUsR0FBSUMsY0FBZSxDQUFDRixVQUFVRyxRQUFWLEVBQXNCLEVBQXZCLEVBQTJCQyxNQUEzQixDQUFrQyxTQUFDQyxJQUFELENBQU9DLElBQVAsQ0FBYUMsQ0FBYixDQUFtQjtBQUN0RSxHQUFNQyxpQkFBa0IsQ0FBQyxNQUFLQyxLQUFMLENBQVdOLFFBQVgsRUFBdUIsRUFBeEIsRUFBNEJJLENBQTVCLENBQXhCO0FBQ0EsR0FBSSxDQUFDQyxlQUFELEVBQW9CLENBQUNGLElBQXJCLEVBQTZCLHlCQUFVRSxlQUFWLEVBQTJCRSxPQUEzQixLQUF5Qyx5QkFBVUosSUFBVixFQUFnQkksT0FBaEIsRUFBMUUsQ0FBcUc7QUFDbkcsTUFBTztBQUNMQyxPQUFRLElBREg7QUFFTEMsTUFBTyxVQUZGLENBQVA7O0FBSUQ7QUFDRCxNQUFPUCxLQUFQO0FBQ0QsQ0FUa0IsQ0FTaEIsQ0FBQ00sT0FBUSxLQUFULENBVGdCLENBQW5COztBQVdBVCxhQUFlLENBQUMsYUFBRCxDQUFnQixlQUFoQixFQUFpQ0UsTUFBakMsQ0FBd0MsU0FBQ0MsSUFBRCxDQUFPQyxJQUFQLENBQWdCO0FBQ3JFLEdBQUksQ0FBQ0QsS0FBS00sTUFBTixFQUFnQlgsVUFBVU0sSUFBVixJQUFvQixNQUFLRyxLQUFMLENBQVdILElBQVgsQ0FBeEMsQ0FBMEQ7QUFDeEQsTUFBTztBQUNMSyxPQUFRLElBREg7QUFFTEMsTUFBT04sSUFGRixDQUFQOztBQUlEO0FBQ0QsTUFBT0QsS0FBUDtBQUNELENBUmMsQ0FRWkgsWUFSWSxDQUFmOztBQVVBQSxhQUFlLENBQUMsU0FBRCxDQUFZLFNBQVosQ0FBdUIsU0FBdkIsRUFBa0NFLE1BQWxDLENBQXlDLFNBQUNDLElBQUQsQ0FBT0MsSUFBUCxDQUFnQjtBQUN0RSxHQUFNTyxVQUFXLHlCQUFVLE1BQUtKLEtBQUwsQ0FBV0gsSUFBWCxDQUFWLENBQWpCO0FBQ0EsR0FBTVEsVUFBVyx5QkFBVWQsVUFBVU0sSUFBVixDQUFWLENBQWpCO0FBQ0EsR0FBSUQsS0FBS00sTUFBVCxDQUFpQjtBQUNmLE1BQU9OLEtBQVA7QUFDRCxDQUZELElBRU8sSUFBSVEsV0FBYUMsUUFBakIsQ0FBMkI7QUFDaEMsR0FBSUQsVUFBWUMsUUFBWixFQUF3QkQsU0FBU0gsT0FBVCxLQUF1QkksU0FBU0osT0FBVCxFQUFuRCxDQUF1RTtBQUNyRSxNQUFPTCxLQUFQO0FBQ0QsQ0FGRCxJQUVPO0FBQ0wsTUFBTztBQUNMTSxPQUFRLElBREg7QUFFTEMsTUFBT04sSUFGRixDQUFQOztBQUlEO0FBQ0Y7QUFDRCxNQUFPRCxLQUFQO0FBQ0QsQ0FoQmMsQ0FnQlpILFlBaEJZLENBQWY7O0FBa0JBLEdBQUlELFVBQVVjLFlBQVYsR0FBMkIsS0FBS0MsS0FBTCxDQUFXRCxZQUExQyxDQUF3RDtBQUN0RGIsYUFBZTtBQUNiUyxPQUFRLElBREs7QUFFYkMsTUFBTyxTQUZNLENBQWY7O0FBSUQ7O0FBRUQsTUFBT1YsY0FBYVMsTUFBcEI7QUFDRCIsImZpbGUiOiJ1cGRhdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtwYXJzZURhdGV9IGZyb20gJy4uL2ludGVyZmFjZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICBsZXQgc2hvdWxkVXBkYXRlID0gKG5leHRQcm9wcy5zZWxlY3RlZCB8fCBbXSkucmVkdWNlKChwcmV2LCBuZXh0LCBpKSA9PiB7XG4gICAgY29uc3QgY3VycmVudFNlbGVjdGVkID0gKHRoaXMucHJvcHMuc2VsZWN0ZWQgfHwgW10pW2ldO1xuICAgIGlmICghY3VycmVudFNlbGVjdGVkIHx8ICFuZXh0IHx8IHBhcnNlRGF0ZShjdXJyZW50U2VsZWN0ZWQpLmdldFRpbWUoKSAhPT0gcGFyc2VEYXRlKG5leHQpLmdldFRpbWUoKSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdXBkYXRlOiB0cnVlLFxuICAgICAgICBmaWVsZDogJ3NlbGVjdGVkJ1xuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHByZXY7XG4gIH0sIHt1cGRhdGU6IGZhbHNlfSk7XG5cbiAgc2hvdWxkVXBkYXRlID0gWydtYXJrZWREYXRlcycsICdoaWRlRXh0cmFEYXlzJ10ucmVkdWNlKChwcmV2LCBuZXh0KSA9PiB7XG4gICAgaWYgKCFwcmV2LnVwZGF0ZSAmJiBuZXh0UHJvcHNbbmV4dF0gIT09IHRoaXMucHJvcHNbbmV4dF0pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHVwZGF0ZTogdHJ1ZSxcbiAgICAgICAgZmllbGQ6IG5leHRcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBwcmV2O1xuICB9LCBzaG91bGRVcGRhdGUpO1xuXG4gIHNob3VsZFVwZGF0ZSA9IFsnbWluRGF0ZScsICdtYXhEYXRlJywgJ2N1cnJlbnQnXS5yZWR1Y2UoKHByZXYsIG5leHQpID0+IHtcbiAgICBjb25zdCBwcmV2RGF0ZSA9IHBhcnNlRGF0ZSh0aGlzLnByb3BzW25leHRdKTtcbiAgICBjb25zdCBuZXh0RGF0ZSA9IHBhcnNlRGF0ZShuZXh0UHJvcHNbbmV4dF0pO1xuICAgIGlmIChwcmV2LnVwZGF0ZSkge1xuICAgICAgcmV0dXJuIHByZXY7XG4gICAgfSBlbHNlIGlmIChwcmV2RGF0ZSAhPT0gbmV4dERhdGUpIHtcbiAgICAgIGlmIChwcmV2RGF0ZSAmJiBuZXh0RGF0ZSAmJiBwcmV2RGF0ZS5nZXRUaW1lKCkgPT09IG5leHREYXRlLmdldFRpbWUoKSkge1xuICAgICAgICByZXR1cm4gcHJldjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdXBkYXRlOiB0cnVlLFxuICAgICAgICAgIGZpZWxkOiBuZXh0XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwcmV2O1xuICB9LCBzaG91bGRVcGRhdGUpO1xuXG4gIGlmIChuZXh0U3RhdGUuY3VycmVudE1vbnRoICE9PSB0aGlzLnN0YXRlLmN1cnJlbnRNb250aCkge1xuICAgIHNob3VsZFVwZGF0ZSA9IHtcbiAgICAgIHVwZGF0ZTogdHJ1ZSxcbiAgICAgIGZpZWxkOiAnY3VycmVudCdcbiAgICB9O1xuICB9XG4gIC8vY29uc29sZS5sb2coc2hvdWxkVXBkYXRlLmZpZWxkLCBzaG91bGRVcGRhdGUudXBkYXRlKTtcbiAgcmV0dXJuIHNob3VsZFVwZGF0ZS51cGRhdGU7XG59XG4iXX0=