f051bb1fdd85903843d0bfefb55a0ef8












'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

var Blob=require('Blob');var _require=

require('NativeModules'),BlobModule=_require.BlobModule;

var BLOB_URL_PREFIX=null;

if(typeof BlobModule.BLOB_URI_SCHEME==='string'){
BLOB_URL_PREFIX=BlobModule.BLOB_URI_SCHEME+':';
if(typeof BlobModule.BLOB_URI_HOST==='string'){
BLOB_URL_PREFIX+='//'+BlobModule.BLOB_URI_HOST+'/';
}
}var

























URL=function(){
function URL(){_classCallCheck(this,URL);
throw new Error('Creating BlobURL objects is not supported yet.');
}_createClass(URL,null,[{key:'createObjectURL',value:function createObjectURL(

blob){
if(BLOB_URL_PREFIX===null){
throw new Error('Cannot create URL for blob!');
}
return''+BLOB_URL_PREFIX+blob.blobId+'?offset='+blob.offset+'&size='+blob.size;
}},{key:'revokeObjectURL',value:function revokeObjectURL(

url){

}}]);return URL;}();


module.exports=URL;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVSTC5qcyJdLCJuYW1lcyI6WyJCbG9iIiwicmVxdWlyZSIsIkJsb2JNb2R1bGUiLCJCTE9CX1VSTF9QUkVGSVgiLCJCTE9CX1VSSV9TQ0hFTUUiLCJCTE9CX1VSSV9IT1NUIiwiVVJMIiwiRXJyb3IiLCJibG9iIiwiYmxvYklkIiwib2Zmc2V0Iiwic2l6ZSIsInVybCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVlBLGE7O0FBRUEsR0FBTUEsTUFBT0MsUUFBUSxNQUFSLENBQWIsQzs7QUFFdUJBLFFBQVEsZUFBUixDLENBQWZDLFUsVUFBQUEsVTs7QUFFUixHQUFJQyxpQkFBa0IsSUFBdEI7O0FBRUEsR0FBSSxNQUFPRCxZQUFXRSxlQUFsQixHQUFzQyxRQUExQyxDQUFvRDtBQUNsREQsZ0JBQWtCRCxXQUFXRSxlQUFYLENBQTZCLEdBQS9DO0FBQ0EsR0FBSSxNQUFPRixZQUFXRyxhQUFsQixHQUFvQyxRQUF4QyxDQUFrRDtBQUNoREYsc0JBQXdCRCxXQUFXRyxhQUFuQztBQUNEO0FBQ0YsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQktDLEc7QUFDSixjQUFjO0FBQ1osS0FBTSxJQUFJQyxNQUFKLENBQVUsZ0RBQVYsQ0FBTjtBQUNELEM7O0FBRXNCQyxJLENBQVk7QUFDakMsR0FBSUwsa0JBQW9CLElBQXhCLENBQThCO0FBQzVCLEtBQU0sSUFBSUksTUFBSixDQUFVLDZCQUFWLENBQU47QUFDRDtBQUNELFNBQVVKLGVBQVYsQ0FBNEJLLEtBQUtDLE1BQWpDLFlBQWtERCxLQUFLRSxNQUF2RCxVQUFzRUYsS0FBS0csSUFBM0U7QUFDRCxDOztBQUVzQkMsRyxDQUFhOztBQUVuQyxDOzs7QUFHSEMsT0FBT0MsT0FBUCxDQUFpQlIsR0FBakIiLCJmaWxlIjoiVVJMLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBVUkxcbiAqIEBmbG93XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBCbG9iID0gcmVxdWlyZSgnQmxvYicpO1xuXG5jb25zdCB7IEJsb2JNb2R1bGUgfSA9IHJlcXVpcmUoJ05hdGl2ZU1vZHVsZXMnKTtcblxubGV0IEJMT0JfVVJMX1BSRUZJWCA9IG51bGw7XG5cbmlmICh0eXBlb2YgQmxvYk1vZHVsZS5CTE9CX1VSSV9TQ0hFTUUgPT09ICdzdHJpbmcnKSB7XG4gIEJMT0JfVVJMX1BSRUZJWCA9IEJsb2JNb2R1bGUuQkxPQl9VUklfU0NIRU1FICsgJzonO1xuICBpZiAodHlwZW9mIEJsb2JNb2R1bGUuQkxPQl9VUklfSE9TVCA9PT0gJ3N0cmluZycpIHtcbiAgICBCTE9CX1VSTF9QUkVGSVggKz0gYC8vJHtCbG9iTW9kdWxlLkJMT0JfVVJJX0hPU1R9L2A7XG4gIH1cbn1cblxuLyoqXG4gKiBUbyBhbGxvdyBCbG9icyBiZSBhY2Nlc3NlZCB2aWEgYGNvbnRlbnQ6Ly9gIFVSSXMsXG4gKiB5b3UgbmVlZCB0byByZWdpc3RlciBgQmxvYlByb3ZpZGVyYCBhcyBhIENvbnRlbnRQcm92aWRlciBpbiB5b3VyIGFwcCdzIGBBbmRyb2lkTWFuaWZlc3QueG1sYDpcbiAqXG4gKiBgYGB4bWxcbiAqIDxtYW5pZmVzdD5cbiAqICAgPGFwcGxpY2F0aW9uPlxuICogICAgIDxwcm92aWRlclxuICogICAgICAgYW5kcm9pZDpuYW1lPVwiY29tLmZhY2Vib29rLnJlYWN0Lm1vZHVsZXMuYmxvYi5CbG9iUHJvdmlkZXJcIlxuICogICAgICAgYW5kcm9pZDphdXRob3JpdGllcz1cIkBzdHJpbmcvYmxvYl9wcm92aWRlcl9hdXRob3JpdHlcIlxuICogICAgICAgYW5kcm9pZDpleHBvcnRlZD1cImZhbHNlXCJcbiAqICAgICAvPlxuICogICA8L2FwcGxpY2F0aW9uPlxuICogPC9tYW5pZmVzdD5cbiAqIGBgYFxuICogQW5kIHRoZW4gZGVmaW5lIHRoZSBgYmxvYl9wcm92aWRlcl9hdXRob3JpdHlgIHN0cmluZyBpbiBgcmVzL3ZhbHVlcy9zdHJpbmdzLnhtbGAuXG4gKiBVc2UgYSBkb3R0ZWQgbmFtZSB0aGF0J3MgZW50aXJlbHkgdW5pcXVlIHRvIHlvdXIgYXBwOlxuICpcbiAqIGBgYHhtbFxuICogPHJlc291cmNlcz5cbiAqICAgPHN0cmluZyBuYW1lPVwiYmxvYl9wcm92aWRlcl9hdXRob3JpdHlcIj55b3VyLmFwcC5wYWNrYWdlLmJsb2JzPC9zdHJpbmc+XG4gKiA8L3Jlc291cmNlcz5cbiAqIGBgYFxuICovXG5jbGFzcyBVUkwge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0NyZWF0aW5nIEJsb2JVUkwgb2JqZWN0cyBpcyBub3Qgc3VwcG9ydGVkIHlldC4nKTtcbiAgfVxuXG4gIHN0YXRpYyBjcmVhdGVPYmplY3RVUkwoYmxvYjogQmxvYikge1xuICAgIGlmIChCTE9CX1VSTF9QUkVGSVggPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNyZWF0ZSBVUkwgZm9yIGJsb2IhJyk7XG4gICAgfVxuICAgIHJldHVybiBgJHtCTE9CX1VSTF9QUkVGSVh9JHtibG9iLmJsb2JJZH0/b2Zmc2V0PSR7YmxvYi5vZmZzZXR9JnNpemU9JHtibG9iLnNpemV9YDtcbiAgfVxuXG4gIHN0YXRpYyByZXZva2VPYmplY3RVUkwodXJsOiBzdHJpbmcpIHtcbiAgICAvLyBEbyBub3RoaW5nLlxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVVJMO1xuIl19