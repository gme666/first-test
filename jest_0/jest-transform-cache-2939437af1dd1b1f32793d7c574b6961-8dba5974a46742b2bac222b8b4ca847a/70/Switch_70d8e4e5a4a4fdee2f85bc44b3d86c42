07e3961d2db1be80670b24f2be272cf1
Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};exports.default=



Switch;var _react=require('react');var _react2=_interopRequireDefault(_react);var _TabBar=require('./TabBar');var _TabBar2=_interopRequireDefault(_TabBar);var _Actions=require('./Actions');var _Actions2=_interopRequireDefault(_Actions);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function Switch(props){
var navState=props.navigationState;

var selector=props.selector;
var statem=props.statem;
if(!selector&&!statem)console.error('Selector should be defined.');
var index=-1;
var selectedKey=void 0;
if(!selector){

navState.children.forEach(function(el,i){
if(!(el.default||el.state)){
console.error('Either default or state should be defined for element='+el.key);
}
if(el.default){
index=i;
}else if(el.state.active){
index=i;
}
});
}else{
selectedKey=selector(props);
if(!selectedKey)console.error('Selector should return key.');
navState.children.forEach(function(el,i){
if(el.sceneKey===selectedKey){
index=i;
}
});
}
if(index===-1)console.error('A scene for key \u201C'+selectedKey+'\u201D does not exist.');
var navigationState=_extends({},navState,{index:index});

if(index!==navState.index){
if(props.unmountScenes){
setTimeout(function(){
_Actions2.default[selectedKey]({unmountScenes:true});
},0);
navigationState=_extends({},navState,{children:[navState.children[navState.index]],index:0});
}else{
setTimeout(function(){
_Actions2.default[selectedKey]();
},0);
}
}

return(
_react2.default.createElement(_TabBar2.default,{
onNavigate:props.onNavigate,
navigationState:navigationState}));


}

Switch.propTypes={
navigationState:_react.PropTypes.object,
onNavigate:_react.PropTypes.func,
selector:_react.PropTypes.func,
statem:_react.PropTypes.any,
unmountScenes:_react.PropTypes.bool};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN3aXRjaC5qcyJdLCJuYW1lcyI6WyJTd2l0Y2giLCJwcm9wcyIsIm5hdlN0YXRlIiwibmF2aWdhdGlvblN0YXRlIiwic2VsZWN0b3IiLCJzdGF0ZW0iLCJjb25zb2xlIiwiZXJyb3IiLCJpbmRleCIsInNlbGVjdGVkS2V5IiwiY2hpbGRyZW4iLCJmb3JFYWNoIiwiZWwiLCJpIiwiZGVmYXVsdCIsInN0YXRlIiwia2V5IiwiYWN0aXZlIiwic2NlbmVLZXkiLCJ1bm1vdW50U2NlbmVzIiwic2V0VGltZW91dCIsIm9uTmF2aWdhdGUiLCJwcm9wVHlwZXMiLCJvYmplY3QiLCJmdW5jIiwiYW55IiwiYm9vbCJdLCJtYXBwaW5ncyI6Ijs7OztBQUl3QkEsTSxDQUp4Qiw0QiwyQ0FDQSxnQyw2Q0FDQSxrQyxrSUFFZSxRQUFTQSxPQUFULENBQWdCQyxLQUFoQixDQUF1QjtBQUNwQyxHQUFNQyxVQUFXRCxNQUFNRSxlQUF2Qjs7QUFFQSxHQUFNQyxVQUFXSCxNQUFNRyxRQUF2QjtBQUNBLEdBQU1DLFFBQVNKLE1BQU1JLE1BQXJCO0FBQ0EsR0FBSSxDQUFDRCxRQUFELEVBQWEsQ0FBQ0MsTUFBbEIsQ0FBMEJDLFFBQVFDLEtBQVIsQ0FBYyw2QkFBZDtBQUMxQixHQUFJQyxPQUFRLENBQUMsQ0FBYjtBQUNBLEdBQUlDLG1CQUFKO0FBQ0EsR0FBSSxDQUFDTCxRQUFMLENBQWU7O0FBRWJGLFNBQVNRLFFBQVQsQ0FBa0JDLE9BQWxCLENBQTBCLFNBQUNDLEVBQUQsQ0FBS0MsQ0FBTCxDQUFXO0FBQ25DLEdBQUksRUFBRUQsR0FBR0UsT0FBSCxFQUFjRixHQUFHRyxLQUFuQixDQUFKLENBQStCO0FBQzdCVCxRQUFRQyxLQUFSLDBEQUF1RUssR0FBR0ksR0FBMUU7QUFDRDtBQUNELEdBQUlKLEdBQUdFLE9BQVAsQ0FBZ0I7QUFDZE4sTUFBUUssQ0FBUjtBQUNELENBRkQsSUFFTyxJQUFJRCxHQUFHRyxLQUFILENBQVNFLE1BQWIsQ0FBcUI7QUFDMUJULE1BQVFLLENBQVI7QUFDRDtBQUNGLENBVEQ7QUFVRCxDQVpELElBWU87QUFDTEosWUFBY0wsU0FBU0gsS0FBVCxDQUFkO0FBQ0EsR0FBSSxDQUFDUSxXQUFMLENBQWtCSCxRQUFRQyxLQUFSLENBQWMsNkJBQWQ7QUFDbEJMLFNBQVNRLFFBQVQsQ0FBa0JDLE9BQWxCLENBQTBCLFNBQUNDLEVBQUQsQ0FBS0MsQ0FBTCxDQUFXO0FBQ25DLEdBQUlELEdBQUdNLFFBQUgsR0FBZ0JULFdBQXBCLENBQWlDO0FBQy9CRCxNQUFRSyxDQUFSO0FBQ0Q7QUFDRixDQUpEO0FBS0Q7QUFDRCxHQUFJTCxRQUFVLENBQUMsQ0FBZixDQUFrQkYsUUFBUUMsS0FBUiwwQkFBa0NFLFdBQWxDO0FBQ2xCLEdBQUlOLDZCQUF1QkQsUUFBdkIsRUFBaUNNLFdBQWpDLEVBQUo7O0FBRUEsR0FBSUEsUUFBVU4sU0FBU00sS0FBdkIsQ0FBOEI7QUFDNUIsR0FBSVAsTUFBTWtCLGFBQVYsQ0FBeUI7QUFDdkJDLFdBQVcsVUFBTTtBQUNmLGtCQUFRWCxXQUFSLEVBQXFCLENBQUVVLGNBQWUsSUFBakIsQ0FBckI7QUFDRCxDQUZELENBRUcsQ0FGSDtBQUdBaEIsNEJBQXVCRCxRQUF2QixFQUFpQ1EsU0FBVSxDQUFDUixTQUFTUSxRQUFULENBQWtCUixTQUFTTSxLQUEzQixDQUFELENBQTNDLENBQWdGQSxNQUFPLENBQXZGO0FBQ0QsQ0FMRCxJQUtPO0FBQ0xZLFdBQVcsVUFBTTtBQUNmLGtCQUFRWCxXQUFSO0FBQ0QsQ0FGRCxDQUVHLENBRkg7QUFHRDtBQUNGOztBQUVEO0FBQ0U7QUFDRSxXQUFZUixNQUFNb0IsVUFEcEI7QUFFRSxnQkFBaUJsQixlQUZuQixFQURGOzs7QUFNRDs7QUFFREgsT0FBT3NCLFNBQVAsQ0FBbUI7QUFDakJuQixnQkFBaUIsaUJBQVVvQixNQURWO0FBRWpCRixXQUFZLGlCQUFVRyxJQUZMO0FBR2pCcEIsU0FBVSxpQkFBVW9CLElBSEg7QUFJakJuQixPQUFRLGlCQUFVb0IsR0FKRDtBQUtqQk4sY0FBZSxpQkFBVU8sSUFMUixDQUFuQiIsImZpbGUiOiJTd2l0Y2guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHJvcFR5cGVzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRhYkJhciBmcm9tICcuL1RhYkJhcic7XG5pbXBvcnQgQWN0aW9ucyBmcm9tICcuL0FjdGlvbnMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTd2l0Y2gocHJvcHMpIHtcbiAgY29uc3QgbmF2U3RhdGUgPSBwcm9wcy5uYXZpZ2F0aW9uU3RhdGU7XG5cbiAgY29uc3Qgc2VsZWN0b3IgPSBwcm9wcy5zZWxlY3RvcjtcbiAgY29uc3Qgc3RhdGVtID0gcHJvcHMuc3RhdGVtO1xuICBpZiAoIXNlbGVjdG9yICYmICFzdGF0ZW0pIGNvbnNvbGUuZXJyb3IoJ1NlbGVjdG9yIHNob3VsZCBiZSBkZWZpbmVkLicpO1xuICBsZXQgaW5kZXggPSAtMTtcbiAgbGV0IHNlbGVjdGVkS2V5O1xuICBpZiAoIXNlbGVjdG9yKSB7XG4gICAgLy8gc3VwcG9ydCBTdGF0ZW0gLSBIYXJlbCBzdGF0ZWNoYXJ0cyBtYWNoaW5lIVxuICAgIG5hdlN0YXRlLmNoaWxkcmVuLmZvckVhY2goKGVsLCBpKSA9PiB7XG4gICAgICBpZiAoIShlbC5kZWZhdWx0IHx8IGVsLnN0YXRlKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBFaXRoZXIgZGVmYXVsdCBvciBzdGF0ZSBzaG91bGQgYmUgZGVmaW5lZCBmb3IgZWxlbWVudD0ke2VsLmtleX1gKTtcbiAgICAgIH1cbiAgICAgIGlmIChlbC5kZWZhdWx0KSB7XG4gICAgICAgIGluZGV4ID0gaTtcbiAgICAgIH0gZWxzZSBpZiAoZWwuc3RhdGUuYWN0aXZlKSB7XG4gICAgICAgIGluZGV4ID0gaTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBzZWxlY3RlZEtleSA9IHNlbGVjdG9yKHByb3BzKTtcbiAgICBpZiAoIXNlbGVjdGVkS2V5KSBjb25zb2xlLmVycm9yKCdTZWxlY3RvciBzaG91bGQgcmV0dXJuIGtleS4nKTtcbiAgICBuYXZTdGF0ZS5jaGlsZHJlbi5mb3JFYWNoKChlbCwgaSkgPT4ge1xuICAgICAgaWYgKGVsLnNjZW5lS2V5ID09PSBzZWxlY3RlZEtleSkge1xuICAgICAgICBpbmRleCA9IGk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgaWYgKGluZGV4ID09PSAtMSkgY29uc29sZS5lcnJvcihgQSBzY2VuZSBmb3Iga2V5IOKAnCR7c2VsZWN0ZWRLZXl94oCdIGRvZXMgbm90IGV4aXN0LmApO1xuICBsZXQgbmF2aWdhdGlvblN0YXRlID0geyAuLi5uYXZTdGF0ZSwgaW5kZXggfTtcblxuICBpZiAoaW5kZXggIT09IG5hdlN0YXRlLmluZGV4KSB7XG4gICAgaWYgKHByb3BzLnVubW91bnRTY2VuZXMpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBBY3Rpb25zW3NlbGVjdGVkS2V5XSh7IHVubW91bnRTY2VuZXM6IHRydWUgfSk7XG4gICAgICB9LCAwKTtcbiAgICAgIG5hdmlnYXRpb25TdGF0ZSA9IHsgLi4ubmF2U3RhdGUsIGNoaWxkcmVuOiBbbmF2U3RhdGUuY2hpbGRyZW5bbmF2U3RhdGUuaW5kZXhdXSwgaW5kZXg6IDAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIEFjdGlvbnNbc2VsZWN0ZWRLZXldKCk7XG4gICAgICB9LCAwKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxUYWJCYXJcbiAgICAgIG9uTmF2aWdhdGU9e3Byb3BzLm9uTmF2aWdhdGV9XG4gICAgICBuYXZpZ2F0aW9uU3RhdGU9e25hdmlnYXRpb25TdGF0ZX1cbiAgICAvPlxuICApO1xufVxuXG5Td2l0Y2gucHJvcFR5cGVzID0ge1xuICBuYXZpZ2F0aW9uU3RhdGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIG9uTmF2aWdhdGU6IFByb3BUeXBlcy5mdW5jLFxuICBzZWxlY3RvcjogUHJvcFR5cGVzLmZ1bmMsXG4gIHN0YXRlbTogUHJvcFR5cGVzLmFueSxcbiAgdW5tb3VudFNjZW5lczogUHJvcFR5cGVzLmJvb2wsXG59O1xuIl19