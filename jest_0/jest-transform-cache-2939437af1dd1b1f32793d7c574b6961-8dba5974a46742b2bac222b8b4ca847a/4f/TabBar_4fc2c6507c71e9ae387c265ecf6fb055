facdce07f5f6f8877532c763f721275f
Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);
var _reactNative=require('react-native');



var _reactNativeTabs=require('react-native-tabs');var _reactNativeTabs2=_interopRequireDefault(_reactNativeTabs);
var _DefaultRenderer=require('./DefaultRenderer');var _DefaultRenderer2=_interopRequireDefault(_DefaultRenderer);
var _Actions=require('./Actions');var _Actions2=_interopRequireDefault(_Actions);
var _TabbedView=require('./TabbedView');var _TabbedView2=_interopRequireDefault(_TabbedView);
var _Util=require('./Util');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var

TabBar=function(_Component){_inherits(TabBar,_Component);_createClass(TabBar,null,[{key:'onSelect',value:function onSelect(










el,selectedSceneKey){
if(!_Actions2.default[el.props.name]){
throw new Error(
'No action is defined for name='+el.props.name+' '+('actions: '+
JSON.stringify(Object.keys(_Actions2.default))));
}
var active=selectedSceneKey==(el.props.name||el.key);
if(active&&typeof el.props.onActivePress==='function'){
el.props.onActivePress();
}else
if(typeof el.props.onPress==='function'){
el.props.onPress();
}else{
_Actions2.default[el.props.name]();
}
}}]);

function TabBar(props,context){_classCallCheck(this,TabBar);var _this=_possibleConstructorReturn(this,(TabBar.__proto__||Object.getPrototypeOf(TabBar)).call(this,
props,context));
_this.renderScene=_this.renderScene.bind(_this);return _this;
}_createClass(TabBar,[{key:'renderScene',value:function renderScene(

navigationState){
return(
_react2.default.createElement(_DefaultRenderer2.default,{
key:navigationState.key,
onNavigate:this.props.onNavigate,
navigationState:navigationState}));


}},{key:'render',value:function render()

{var _this2=this;
var state=this.props.navigationState;
var selected=state.children[state.index];

var hideTabBar=this.props.unmountScenes||
(0,_Util.deepestExplicitValueForKey)(state,'hideTabBar')||
this.props.hideOnChildTabs&&(0,_Util.deepestExplicitValueForKey)(selected,'tabs');

var contents=
_react2.default.createElement(_reactNativeTabs2.default,_extends({
style:state.tabBarStyle,
selectedIconStyle:state.tabBarSelectedItemStyle,
iconStyle:state.tabBarIconContainerStyle,
onSelect:function onSelect(el){return TabBar.onSelect(el,selected.sceneKey);}},state,{
selected:selected.sceneKey,
pressOpacity:this.props.pressOpacity}),

state.children.filter(function(el){return el.icon||_this2.props.tabIcon;}).map(function(el){
var Icon=el.icon||_this2.props.tabIcon;
return _react2.default.createElement(Icon,_extends({},_this2.props,el));
}));


return(
_react2.default.createElement(_reactNative.View,{
style:{flex:1}},

_react2.default.createElement(_TabbedView2.default,{
navigationState:this.props.navigationState,
style:{flex:1},
renderScene:this.renderScene}),

!hideTabBar&&state.children.filter(function(el){return el.icon;}).length>0&&(
state.tabBarBackgroundImage?
_react2.default.createElement(_reactNative.Image,{source:state.tabBarBackgroundImage,style:state.tabBarBackgroundImageStyle},
contents):

contents)));



}}]);return TabBar;}(_react.Component);TabBar.propTypes={navigationState:_react.PropTypes.object,tabIcon:_react.PropTypes.any,onNavigate:_react.PropTypes.func,unmountScenes:_react.PropTypes.bool,pressOpacity:_react.PropTypes.number,hideOnChildTabs:_react.PropTypes.bool};exports.default=



TabBar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYkJhci5qcyJdLCJuYW1lcyI6WyJUYWJCYXIiLCJlbCIsInNlbGVjdGVkU2NlbmVLZXkiLCJwcm9wcyIsIm5hbWUiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJPYmplY3QiLCJrZXlzIiwiYWN0aXZlIiwia2V5Iiwib25BY3RpdmVQcmVzcyIsIm9uUHJlc3MiLCJjb250ZXh0IiwicmVuZGVyU2NlbmUiLCJiaW5kIiwibmF2aWdhdGlvblN0YXRlIiwib25OYXZpZ2F0ZSIsInN0YXRlIiwic2VsZWN0ZWQiLCJjaGlsZHJlbiIsImluZGV4IiwiaGlkZVRhYkJhciIsInVubW91bnRTY2VuZXMiLCJoaWRlT25DaGlsZFRhYnMiLCJjb250ZW50cyIsInRhYkJhclN0eWxlIiwidGFiQmFyU2VsZWN0ZWRJdGVtU3R5bGUiLCJ0YWJCYXJJY29uQ29udGFpbmVyU3R5bGUiLCJvblNlbGVjdCIsInNjZW5lS2V5IiwicHJlc3NPcGFjaXR5IiwiZmlsdGVyIiwiaWNvbiIsInRhYkljb24iLCJtYXAiLCJJY29uIiwiZmxleCIsImxlbmd0aCIsInRhYkJhckJhY2tncm91bmRJbWFnZSIsInRhYkJhckJhY2tncm91bmRJbWFnZVN0eWxlIiwicHJvcFR5cGVzIiwib2JqZWN0IiwiYW55IiwiZnVuYyIsImJvb2wiLCJudW1iZXIiXSwibWFwcGluZ3MiOiJ1eEJBQUEsNEI7QUFDQTs7OztBQUlBLGtEO0FBQ0Esa0Q7QUFDQSxrQztBQUNBLHdDO0FBQ0EsNEI7O0FBRU1BLE07Ozs7Ozs7Ozs7O0FBV1lDLEUsQ0FBSUMsZ0IsQ0FBa0I7QUFDcEMsR0FBSSxDQUFDLGtCQUFRRCxHQUFHRSxLQUFILENBQVNDLElBQWpCLENBQUwsQ0FBNkI7QUFDM0IsS0FBTSxJQUFJQyxNQUFKO0FBQ0osaUNBQWlDSixHQUFHRSxLQUFILENBQVNDLElBQTFDO0FBQ1lFLEtBQUtDLFNBQUwsQ0FBZUMsT0FBT0MsSUFBUCxtQkFBZixDQURaLENBREksQ0FBTjtBQUdEO0FBQ0QsR0FBTUMsUUFB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QkFBVXNCLElBSlIsQ0FLakJkLGFBQWMsaUJBQVVlLE1BTFAsQ0FNakJ0QixnQkFBaUIsaUJBQVVxQixJQU5WLEM7Ozs7QUFzRk45QyxNIiwiZmlsZSI6IlRhYkJhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIEltYWdlLFxuICBWaWV3LFxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFRhYnMgZnJvbSAncmVhY3QtbmF0aXZlLXRhYnMnO1xuaW1wb3J0IERlZmF1bHRSZW5kZXJlciBmcm9tICcuL0RlZmF1bHRSZW5kZXJlcic7XG5pbXBvcnQgQWN0aW9ucyBmcm9tICcuL0FjdGlvbnMnO1xuaW1wb3J0IFRhYmJlZFZpZXcgZnJvbSAnLi9UYWJiZWRWaWV3JztcbmltcG9ydCB7IGRlZXBlc3RFeHBsaWNpdFZhbHVlRm9yS2V5IH0gZnJvbSAnLi9VdGlsJztcblxuY2xhc3MgVGFiQmFyIGV4dGVuZHMgQ29tcG9uZW50IHtcblxuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIG5hdmlnYXRpb25TdGF0ZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICB0YWJJY29uOiBQcm9wVHlwZXMuYW55LFxuICAgIG9uTmF2aWdhdGU6IFByb3BUeXBlcy5mdW5jLFxuICAgIHVubW91bnRTY2VuZXM6IFByb3BUeXBlcy5ib29sLFxuICAgIHByZXNzT3BhY2l0eTogUHJvcFR5cGVzLm51bWJlcixcbiAgICBoaWRlT25DaGlsZFRhYnM6IFByb3BUeXBlcy5ib29sLFxuICB9O1xuXG4gIHN0YXRpYyBvblNlbGVjdChlbCwgc2VsZWN0ZWRTY2VuZUtleSkge1xuICAgIGlmICghQWN0aW9uc1tlbC5wcm9wcy5uYW1lXSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgTm8gYWN0aW9uIGlzIGRlZmluZWQgZm9yIG5hbWU9JHtlbC5wcm9wcy5uYW1lfSBgICtcbiAgICAgICAgYGFjdGlvbnM6ICR7SlNPTi5zdHJpbmdpZnkoT2JqZWN0LmtleXMoQWN0aW9ucykpfWApO1xuICAgIH1cbiAgICBjb25zdCBhY3RpdmUgPSBzZWxlY3RlZFNjZW5lS2V5ID09IChlbC5wcm9wcy5uYW1lIHx8IGVsLmtleSlcbiAgICBpZiAoYWN0aXZlICYmIHR5cGVvZiBlbC5wcm9wcy5vbkFjdGl2ZVByZXNzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBlbC5wcm9wcy5vbkFjdGl2ZVByZXNzKCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBlbC5wcm9wcy5vblByZXNzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBlbC5wcm9wcy5vblByZXNzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIEFjdGlvbnNbZWwucHJvcHMubmFtZV0oKTtcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm9wcywgY29udGV4dCkge1xuICAgIHN1cGVyKHByb3BzLCBjb250ZXh0KTtcbiAgICB0aGlzLnJlbmRlclNjZW5lID0gdGhpcy5yZW5kZXJTY2VuZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgcmVuZGVyU2NlbmUobmF2aWdhdGlvblN0YXRlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxEZWZhdWx0UmVuZGVyZXJcbiAgICAgICAga2V5PXtuYXZpZ2F0aW9uU3RhdGUua2V5fVxuICAgICAgICBvbk5hdmlnYXRlPXt0aGlzLnByb3BzLm9uTmF2aWdhdGV9XG4gICAgICAgIG5hdmlnYXRpb25TdGF0ZT17bmF2aWdhdGlvblN0YXRlfVxuICAgICAgLz5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHN0YXRlID0gdGhpcy5wcm9wcy5uYXZpZ2F0aW9uU3RhdGU7XG4gICAgY29uc3Qgc2VsZWN0ZWQgPSBzdGF0ZS5jaGlsZHJlbltzdGF0ZS5pbmRleF07XG5cbiAgICBjb25zdCBoaWRlVGFiQmFyID0gdGhpcy5wcm9wcy51bm1vdW50U2NlbmVzIHx8XG4gICAgICBkZWVwZXN0RXhwbGljaXRWYWx1ZUZvcktleShzdGF0ZSwgJ2hpZGVUYWJCYXInKSB8fFxuICAgICAgKHRoaXMucHJvcHMuaGlkZU9uQ2hpbGRUYWJzICYmIGRlZXBlc3RFeHBsaWNpdFZhbHVlRm9yS2V5KHNlbGVjdGVkLCAndGFicycpKTtcblxuICAgIGNvbnN0IGNvbnRlbnRzID0gKFxuICAgICAgPFRhYnNcbiAgICAgICAgc3R5bGU9e3N0YXRlLnRhYkJhclN0eWxlfVxuICAgICAgICBzZWxlY3RlZEljb25TdHlsZT17c3RhdGUudGFiQmFyU2VsZWN0ZWRJdGVtU3R5bGV9XG4gICAgICAgIGljb25TdHlsZT17c3RhdGUudGFiQmFySWNvbkNvbnRhaW5lclN0eWxlfVxuICAgICAgICBvblNlbGVjdD17KGVsKSA9PiBUYWJCYXIub25TZWxlY3QoZWwsIHNlbGVjdGVkLnNjZW5lS2V5KX0gey4uLnN0YXRlfVxuICAgICAgICBzZWxlY3RlZD17c2VsZWN0ZWQuc2NlbmVLZXl9XG4gICAgICAgIHByZXNzT3BhY2l0eT17dGhpcy5wcm9wcy5wcmVzc09wYWNpdHl9XG4gICAgICA+XG4gICAgICAgIHtzdGF0ZS5jaGlsZHJlbi5maWx0ZXIoZWwgPT4gZWwuaWNvbiB8fCB0aGlzLnByb3BzLnRhYkljb24pLm1hcCgoZWwpID0+IHtcbiAgICAgICAgICBjb25zdCBJY29uID0gZWwuaWNvbiB8fCB0aGlzLnByb3BzLnRhYkljb247XG4gICAgICAgICAgcmV0dXJuIDxJY29uIHsuLi50aGlzLnByb3BzfSB7Li4uZWx9IC8+O1xuICAgICAgICB9KX1cbiAgICAgIDwvVGFicz5cbiAgICApO1xuICAgIHJldHVybiAoXG4gICAgICA8Vmlld1xuICAgICAgICBzdHlsZT17eyBmbGV4OiAxIH19XG4gICAgICA+XG4gICAgICAgIDxUYWJiZWRWaWV3XG4gICAgICAgICAgbmF2aWdhdGlvblN0YXRlPXt0aGlzLnByb3BzLm5hdmlnYXRpb25TdGF0ZX1cbiAgICAgICAgICBzdHlsZT17eyBmbGV4OiAxIH19XG4gICAgICAgICAgcmVuZGVyU2NlbmU9e3RoaXMucmVuZGVyU2NlbmV9XG4gICAgICAgIC8+XG4gICAgICAgIHshaGlkZVRhYkJhciAmJiBzdGF0ZS5jaGlsZHJlbi5maWx0ZXIoZWwgPT4gZWwuaWNvbikubGVuZ3RoID4gMCAmJlxuICAgICAgICAgIChzdGF0ZS50YWJCYXJCYWNrZ3JvdW5kSW1hZ2UgPyAoXG4gICAgICAgICAgICA8SW1hZ2Ugc291cmNlPXtzdGF0ZS50YWJCYXJCYWNrZ3JvdW5kSW1hZ2V9IHN0eWxlPXtzdGF0ZS50YWJCYXJCYWNrZ3JvdW5kSW1hZ2VTdHlsZX0+XG4gICAgICAgICAgICAgIHtjb250ZW50c31cbiAgICAgICAgICAgIDwvSW1hZ2U+XG4gICAgICAgICAgKSA6IGNvbnRlbnRzKVxuICAgICAgICB9XG4gICAgICA8L1ZpZXc+XG4gICAgKTtcbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhYkJhcjtcbiJdfQ==