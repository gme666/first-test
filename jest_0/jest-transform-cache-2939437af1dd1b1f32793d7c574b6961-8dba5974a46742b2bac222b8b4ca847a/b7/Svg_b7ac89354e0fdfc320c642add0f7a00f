4f4be41613396dba8ff478fca84fd061
Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);


var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);
var _reactNative=require('react-native');






var _extractViewBox=require('../lib/extract/extractViewBox');var _extractViewBox2=_interopRequireDefault(_extractViewBox);
var _attributes=require('../lib/attributes');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

var RNSVGSvgViewManager=_reactNative.NativeModules.RNSVGSvgViewManager;


var id=0;

var styles=_reactNative.StyleSheet.create({
svg:{
backgroundColor:'transparent'}});var



Svg=function(_Component){_inherits(Svg,_Component);















function Svg(){_classCallCheck(this,Svg);var _this=_possibleConstructorReturn(this,(Svg.__proto__||Object.getPrototypeOf(Svg)).apply(this,
arguments));_this.




measureInWindow=function(){var _this$root;
(_this$root=_this.root).measureInWindow.apply(_this$root,arguments);
};_this.

measure=function(){var _this$root2;
(_this$root2=_this.root).measure.apply(_this$root2,arguments);
};_this.

measureLayout=function(){var _this$root3;
(_this$root3=_this.root).measureLayout.apply(_this$root3,arguments);
};_this.

setNativeProps=function(){var _this$root4;
(_this$root4=_this.root).setNativeProps.apply(_this$root4,arguments);
};_this.

toDataURL=function(callback){
callback&&RNSVGSvgViewManager.toDataURL((0,_reactNative.findNodeHandle)(_this.root),callback);
};id++;_this.id=id;_this.onDataURLCallbacks=[];return _this;}_createClass(Svg,[{key:'render',value:function render()

{var _this2=this;var _props=
this.props,opacity=_props.opacity,width=_props.width,height=_props.height,viewBox=_props.viewBox,preserveAspectRatio=_props.preserveAspectRatio,style=_props.style,props=_objectWithoutProperties(_props,['opacity','width','height','viewBox','preserveAspectRatio','style']);
var dimensions=void 0;

if(width&&height){
dimensions={
width:+width,
height:+height,
flex:0};

}

return _react2.default.createElement(NativeSvgView,_extends({},
props,
(0,_extractViewBox2.default)({viewBox:viewBox,preserveAspectRatio:preserveAspectRatio}),{
ref:function ref(ele){_this2.root=ele;},
style:[
styles.svg,
style,
!isNaN(+opacity)&&{
opacity:+opacity},

dimensions]}));


}}]);return Svg;}(_react.Component);Svg.displayName='Svg';Svg.propTypes=_extends({},_reactNative.ViewPropTypes,{opacity:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.number]),width:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.number]),height:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.number]),viewBox:_propTypes2.default.string,preserveAspectRatio:_propTypes2.default.string});Svg.defaultProps={preserveAspectRatio:'xMidYMid meet'};


var NativeSvgView=(0,_reactNative.requireNativeComponent)('RNSVGSvgView',null,{
nativeOnly:_extends({},_attributes.ViewBoxAttributes)});exports.default=




Svg;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN2Zy5qcyJdLCJuYW1lcyI6WyJSTlNWR1N2Z1ZpZXdNYW5hZ2VyIiwiaWQiLCJzdHlsZXMiLCJjcmVhdGUiLCJzdmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJTdmciLCJhcmd1bWVudHMiLCJtZWFzdXJlSW5XaW5kb3ciLCJyb290IiwibWVhc3VyZSIsIm1lYXN1cmVMYXlvdXQiLCJzZXROYXRpdmVQcm9wcyIsInRvRGF0YVVSTCIsImNhbGxiYWNrIiwib25EYXRhVVJMQ2FsbGJhY2tzIiwicHJvcHMiLCJvcGFjaXR5Iiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwicHJlc2VydmVBc3BlY3RSYXRpbyIsInN0eWxlIiwiZGltZW5zaW9ucyIsImZsZXgiLCJlbGUiLCJpc05hTiIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwib25lT2ZUeXBlIiwic3RyaW5nIiwibnVtYmVyIiwiZGVmYXVsdFByb3BzIiwiTmF0aXZlU3ZnVmlldyIsIm5hdGl2ZU9ubHkiXSwibWFwcGluZ3MiOiJ1eEJBQUEsNEI7OztBQUdBLHFDO0FBQ0E7Ozs7Ozs7QUFPQSw2RDtBQUNBLDZDOztBQUVBLEdBQU1BLHFCQUFzQiwyQkFBY0EsbUJBQTFDOzs7QUFHQSxHQUFJQyxJQUFLLENBQVQ7O0FBRUEsR0FBTUMsUUFBUyx3QkFBV0MsTUFBWCxDQUFrQjtBQUM3QkMsSUFBSztBQUNEQyxnQkFBaUIsYUFEaEIsQ0FEd0IsQ0FBbEIsQ0FBZixDOzs7O0FBTU1DLEc7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkYsY0FBYztBQUNEQyxTQURDOzs7OztBQU1kQyxlQU5jLENBTUksVUFBYTtBQUMzQixrQkFBS0MsSUFBTCxFQUFVRCxlQUFWO0FBQ0gsQ0FSYTs7QUFVZEUsT0FWYyxDQVVKLFVBQWE7QUFDbkIsbUJBQUtELElBQUwsRUFBVUMsT0FBVjtBQUNILENBWmE7O0FBY2RDLGFBZGMsQ0FjRSxVQUFhO0FBQ3pCLG1CQUFLRixJQUFMLEVBQVVFLGFBQVY7QUFDSCxDQWhCYTs7QUFrQmRDLGNBbEJjLENBa0JHLFVBQWE7QUFDMUIsbUJBQUtILElBQUwsRUFBVUcsY0FBVjtBQUNILENBcEJhOztBQXNCZEMsU0F0QmMsQ0FzQkYsU0FBQ0MsUUFBRCxDQUF3QjtBQUNoQ0EsVUFBWWQsb0JBQW9CYSxTQUFwQixDQUE4QixnQ0FBZSxNQUFLSixJQUFwQixDQUE5QixDQUF5REssUUFBekQsQ0FBWjtBQUNILENBeEJhLENBRVZiLEtBQ0EsTUFBS0EsRUFBTCxDQUFVQSxFQUFWLENBQ0EsTUFBS2Msa0JBQUwsQ0FBMEIsRUFBMUIsQ0FKVSxhQUtiLEM7O0FBcUJRO0FBQzJFLEtBQUtDLEtBRGhGLENBQ0VDLE9BREYsUUFDRUEsT0FERixDQUNXQyxLQURYLFFBQ1dBLEtBRFgsQ0FDa0JDLE1BRGxCLFFBQ2tCQSxNQURsQixDQUMwQkMsT0FEMUIsUUFDMEJBLE9BRDFCLENBQ21DQyxtQkFEbkMsUUFDbUNBLG1CQURuQyxDQUN3REMsS0FEeEQsUUFDd0RBLEtBRHhELENBQ2tFTixLQURsRTtBQUVMLEdBQUlPLGtCQUFKOztBQUVBLEdBQUlMLE9BQVNDLE1BQWIsQ0FBcUI7QUFDakJJLFdBQWE7QUFDVEwsTUFBTyxDQUFDQSxLQURDO0FBRVRDLE9BQVEsQ0FBQ0EsTUFGQTtBQUdUSyxLQUFNLENBSEcsQ0FBYjs7QUFLSDs7QUFFRCxNQUFPLCtCQUFDLGFBQUQ7QUFDQ1IsS0FERDtBQUVDLDZCQUFlLENBQUVJLGVBQUYsQ0FBV0MsdUNBQVgsQ0FBZixDQUZEO0FBR0gsSUFBSyxpQkFBTyxDQUFDLE9BQUtaLElBQUwsQ0FBWWdCLEdBQVosQ0FBaUIsQ0FIM0I7QUFJSCxNQUFPO0FBQ0h2QixPQUFPRSxHQURKO0FBRUhrQixLQUZHO0FBR0gsQ0FBQ0ksTUFBTSxDQUFDVCxPQUFQLENBQUQsRUFBb0I7QUFDaEJBLFFBQVMsQ0FBQ0EsT0FETSxDQUhqQjs7QUFNSE0sVUFORyxDQUpKLEdBQVA7OztBQWFILEMsbUNBbkVDakIsRyxDQUNLcUIsVyxDQUFjLEssQ0FEbkJyQixHLENBRUtzQixTLHlDQUVIWCxRQUFTLG9CQUFVWSxTQUFWLENBQW9CLENBQUMsb0JBQVVDLE1BQVgsQ0FBbUIsb0JBQVVDLE1BQTdCLENBQXBCLEMsQ0FDVGIsTUFBTyxvQkFBVVcsU0FBVixDQUFvQixDQUFDLG9CQUFVQyxNQUFYLENBQW1CLG9CQUFVQyxNQUE3QixDQUFwQixDLENBQ1BaLE9BQVEsb0JBQVVVLFNBQVYsQ0FBb0IsQ0FBQyxvQkFBVUMsTUFBWCxDQUFtQixvQkFBVUMsTUFBN0IsQ0FBcEIsQyxDQUVSWCxRQUFTLG9CQUFVVSxNLENBQ25CVCxvQkFBcUIsb0JBQVVTLE0sR0FUakN4QixHLENBWUswQixZLENBQWUsQ0FDbEJYLG9CQUFxQixlQURILEM7OztBQTBEMUIsR0FBTVksZUFBZ0Isd0NBQXVCLGNBQXZCLENBQXVDLElBQXZDLENBQTZDO0FBQy9EQyxxREFEK0QsQ0FBN0MsQ0FBdEIsQzs7Ozs7QUFNZTVCLEciLCJmaWxlIjoiU3ZnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7XG4gICAgQ29tcG9uZW50XG59IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQge1xuICAgIFZpZXdQcm9wVHlwZXMsXG4gICAgcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCxcbiAgICBTdHlsZVNoZWV0LFxuICAgIGZpbmROb2RlSGFuZGxlLFxuICAgIE5hdGl2ZU1vZHVsZXNcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBleHRyYWN0Vmlld0JveCBmcm9tICcuLi9saWIvZXh0cmFjdC9leHRyYWN0Vmlld0JveCc7XG5pbXBvcnQge1ZpZXdCb3hBdHRyaWJ1dGVzfSBmcm9tICcuLi9saWIvYXR0cmlidXRlcyc7XG5cbmNvbnN0IFJOU1ZHU3ZnVmlld01hbmFnZXIgPSBOYXRpdmVNb2R1bGVzLlJOU1ZHU3ZnVmlld01hbmFnZXI7XG5cbi8vIFN2ZyAtIFJvb3Qgbm9kZSBvZiBhbGwgU3ZnIGVsZW1lbnRzXG5sZXQgaWQgPSAwO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgc3ZnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50J1xuICAgIH1cbn0pO1xuXG5jbGFzcyBTdmcgZXh0ZW5kcyBDb21wb25lbnR7XG4gICAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ1N2Zyc7XG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgICAgLi4uVmlld1Byb3BUeXBlcyxcbiAgICAgICAgb3BhY2l0eTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLFxuICAgICAgICB3aWR0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLFxuICAgICAgICBoZWlnaHQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbiAgICAgICAgLy8gbW9yZSBkZXRhaWwgaHR0cHM6Ly9zdmd3Zy5vcmcvc3ZnMi1kcmFmdC9jb29yZHMuaHRtbCNWaWV3Qm94QXR0cmlidXRlXG4gICAgICAgIHZpZXdCb3g6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW86IFByb3BUeXBlcy5zdHJpbmdcbiAgICB9O1xuXG4gICAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICAgICAgcHJlc2VydmVBc3BlY3RSYXRpbzogJ3hNaWRZTWlkIG1lZXQnXG4gICAgfTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBpZCsrO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMub25EYXRhVVJMQ2FsbGJhY2tzID0gW107XG4gICAgfVxuICAgIG1lYXN1cmVJbldpbmRvdyA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIHRoaXMucm9vdC5tZWFzdXJlSW5XaW5kb3coLi4uYXJncyk7XG4gICAgfTtcblxuICAgIG1lYXN1cmUgPSAoLi4uYXJncykgPT4ge1xuICAgICAgICB0aGlzLnJvb3QubWVhc3VyZSguLi5hcmdzKTtcbiAgICB9O1xuXG4gICAgbWVhc3VyZUxheW91dCA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIHRoaXMucm9vdC5tZWFzdXJlTGF5b3V0KC4uLmFyZ3MpO1xuICAgIH07XG5cbiAgICBzZXROYXRpdmVQcm9wcyA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIHRoaXMucm9vdC5zZXROYXRpdmVQcm9wcyguLi5hcmdzKTtcbiAgICB9O1xuXG4gICAgdG9EYXRhVVJMID0gKGNhbGxiYWNrOiBGdW5jdGlvbikgPT4ge1xuICAgICAgICBjYWxsYmFjayAmJiBSTlNWR1N2Z1ZpZXdNYW5hZ2VyLnRvRGF0YVVSTChmaW5kTm9kZUhhbmRsZSh0aGlzLnJvb3QpLCBjYWxsYmFjayk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge29wYWNpdHksIHdpZHRoLCBoZWlnaHQsIHZpZXdCb3gsIHByZXNlcnZlQXNwZWN0UmF0aW8sIHN0eWxlLCAuLi5wcm9wc30gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgZGltZW5zaW9ucztcblxuICAgICAgICBpZiAod2lkdGggJiYgaGVpZ2h0KSB7XG4gICAgICAgICAgICBkaW1lbnNpb25zID0ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiArd2lkdGgsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAraGVpZ2h0LFxuICAgICAgICAgICAgICAgIGZsZXg6IDBcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gPE5hdGl2ZVN2Z1ZpZXdcbiAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgIHsuLi5leHRyYWN0Vmlld0JveCh7IHZpZXdCb3gsIHByZXNlcnZlQXNwZWN0UmF0aW8gfSl9XG4gICAgICAgICAgICByZWY9e2VsZSA9PiB7dGhpcy5yb290ID0gZWxlO319XG4gICAgICAgICAgICBzdHlsZT17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy5zdmcsXG4gICAgICAgICAgICAgICAgc3R5bGUsXG4gICAgICAgICAgICAgICAgIWlzTmFOKCtvcGFjaXR5KSAmJiB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6ICtvcGFjaXR5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkaW1lbnNpb25zXG4gICAgICAgICAgICBdfVxuICAgICAgICAvPjtcbiAgICB9XG59XG5cbmNvbnN0IE5hdGl2ZVN2Z1ZpZXcgPSByZXF1aXJlTmF0aXZlQ29tcG9uZW50KCdSTlNWR1N2Z1ZpZXcnLCBudWxsLCB7XG4gICAgbmF0aXZlT25seToge1xuICAgICAgICAuLi5WaWV3Qm94QXR0cmlidXRlc1xuICAgIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBTdmc7XG4iXX0=