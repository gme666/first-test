6f3c0223e52ae7ac6fcd61d80aa93f9d
Object.defineProperty(exports,"__esModule",{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[typeof Symbol==='function'?Symbol.iterator:'@@iterator'](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if((typeof Symbol==='function'?Symbol.iterator:'@@iterator')in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();














var _react=require('react');var _react2=_interopRequireDefault(_react);
var _reactNative=require('react-native');
var _reactNativeSvg=require('react-native-svg');var _reactNativeSvg2=_interopRequireDefault(_reactNativeSvg);
var _util=require('./util');
var _lodash=require('lodash');var _lodash2=_interopRequireDefault(_lodash);
require('babel-polyfill');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}
var Pie=require('paths-js/pie');var

PieChart=function(_Component){_inherits(PieChart,_Component);function PieChart(){_classCallCheck(this,PieChart);return _possibleConstructorReturn(this,(PieChart.__proto__||Object.getPrototypeOf(PieChart)).apply(this,arguments));}_createClass(PieChart,[{key:'color',value:function color(
























i){
var color=this.props.color||this.props.options&&this.props.options.color;
if(Array.isArray(color)){
if(i>=color.length){
var pallete=_util.Colors.mix(color[i%color.length]);
return _util.Colors.string((0,_util.cyclic)(pallete,i));
}
return color[i];
}else{
if(color&&!_lodash2.default.isString(color))color=color.color;
var _pallete=this.props.pallete||this.props.options&&this.props.options.pallete||_util.Colors.mix(color||'#9ac7f7');
return _util.Colors.string((0,_util.cyclic)(_pallete,i));
}
}},{key:'render',value:function render()





{var _this2=this;
var noDataMsg=this.props.noDataMessage||'No data available';
if(this.props.data===undefined)return _react2.default.createElement(_reactNative.Text,null,noDataMsg);

var options=new _util.Options(this.props);

var x=options.chartWidth/2-(options.margin.left||0);
var y=options.chartHeight/2-(options.margin.top||0);

var radius=Math.min(x,y);

var r=this.props.r;
r=isNaN(r)?this.props.options&&this.props.options.r:r;
r=isNaN(r)?radius/2:r;

var R=this.props.R;
R=R||this.props.options&&this.props.options.R;
R=R||radius;var _ref=

this.props.center||this.props.options&&this.props.options.center||[x,y],_ref2=_slicedToArray(_ref,2),centerX=_ref2[0],centerY=_ref2[1];

var textStyle=(0,_util.fontAdapt)(options.label);

var slices=void 0;

if(this.props.data.length===1){
var item=this.props.data[0];
var outerFill=item.color&&_util.Colors.string(item.color)||this.color(0);
var innerFill=this.props.monoItemInnerFillColor||'#fff';
var stroke=typeof fill==='string'?outerFill:_util.Colors.darkenColor(outerFill);
slices=
_react2.default.createElement(_reactNativeSvg.G,null,
_react2.default.createElement(_reactNativeSvg.Circle,{r:R,cx:centerX,cy:centerY,stroke:stroke,fill:outerFill}),
_react2.default.createElement(_reactNativeSvg.Circle,{r:r,cx:centerX,cy:centerY,stroke:stroke,fill:innerFill}),
_react2.default.createElement(_reactNativeSvg.Text,{fontFamily:textStyle.fontFamily,
fontSize:textStyle.fontSize,
fontWeight:textStyle.fontWeight,
fontStyle:textStyle.fontStyle,
fill:textStyle.fill,
textAnchor:'middle',
x:centerX,
y:centerY-R+(R-r)/2},item.name));


}else{
var chart=Pie({
center:[centerX,centerY],
r:r,
R:R,
data:this.props.data,
accessor:this.props.accessor||(0,_util.identity)(this.props.accessorKey)});


slices=chart.curves.map(function(c,i){
var fill=c.item.color&&_util.Colors.string(c.item.color)||_this2.color(i);
var stroke=typeof fill==='string'?fill:_util.Colors.darkenColor(fill);
return(
_react2.default.createElement(_reactNativeSvg.G,{key:i},
_react2.default.createElement(_reactNativeSvg.Path,{d:c.sector.path.print(),stroke:stroke,fill:fill,fillOpacity:1}),
_react2.default.createElement(_reactNativeSvg.G,{x:options.margin.left,y:options.margin.top},
_react2.default.createElement(_reactNativeSvg.Text,{fontFamily:textStyle.fontFamily,
fontSize:textStyle.fontSize,
fontWeight:textStyle.fontWeight,
fontStyle:textStyle.fontStyle,
fill:textStyle.fill,
textAnchor:'middle',
x:c.sector.centroid[0],
y:c.sector.centroid[1]},c.item.name))));



});
}

var returnValue=_react2.default.createElement(_reactNativeSvg2.default,{width:options.width,height:options.height},
_react2.default.createElement(_reactNativeSvg.G,{x:options.margin.left,y:options.margin.top},
slices));



return returnValue;
}},{key:'defaultRange',get:function get(){return _lodash2.default.map(Array(this.props.data&&this.props.data.length),function(){return 0;});}}]);return PieChart;}(_react.Component);PieChart.defaultProps={options:{margin:{top:20,left:20,right:20,bottom:20},width:600,height:600,color:'#2980B9',r:100,R:200,legendPosition:'topLeft',animate:{type:'oneByOne',duration:200,fillTransition:3},label:{fontFamily:'Arial',fontSize:14,bold:true,color:'#ECF0F1'}}};exports.default=PieChart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,