77b32f25c7f1e90de6b03a39e2876001
Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);
var _reactNative=require('react-native');
var _reactRedux=require('react-redux');
var _firebase=require('firebase');var _firebase2=_interopRequireDefault(_firebase);
var _reactNativePathjsCharts=require('react-native-pathjs-charts');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var

LineChart=function(_Component){_inherits(LineChart,_Component);
function LineChart(props){_classCallCheck(this,LineChart);var _this=_possibleConstructorReturn(this,(LineChart.__proto__||Object.getPrototypeOf(LineChart)).call(this,
props));

_this.state={
usage:[
[
{x:0,y:0}]]};return _this;



}_createClass(LineChart,[{key:'componentWillMount',value:function componentWillMount()

{var _this2=this;var _props=
this.props,year=_props.year,month=_props.month;var _firebase$auth=
_firebase2.default.auth(),currentUser=_firebase$auth.currentUser;

_firebase2.default.
database().
ref('/users/'+currentUser.uid+'/usage/'+year+'/'+month).
on('value',function(snapshot){
var usage=_this2.prepareUsage(year,month,snapshot.val());
_this2.setState({usage:usage});
});
}},{key:'getNumberOfDays',value:function getNumberOfDays(

year,month){
var isLeap=year%4===0&&(year%100!==0||year%400===0);
return[31,isLeap?29:28,31,30,31,30,31,31,30,31,30,31][month-1];
}},{key:'prepareUsage',value:function prepareUsage(

year,month,data){
var daysInMonth=this.getNumberOfDays(year,month);
var usage=[
[]];

var day=void 0;
var date=void 0;

for(var i=0;i<daysInMonth;i++){
day=i<11?'0'+(i+1):i+1;
date=year+'-'+month+'-'+day;

if(data[date]){
usage[0].push({x:i+1,y:parseInt(data[date].usage,10)});
}else{
usage[0].push({x:i+1,y:0});
}
}

return usage;
}},{key:'render',value:function render()

{
var options={
width:280,
height:280,
color:'#2980B9',
margin:{
top:20,
left:45,
bottom:25,
right:20},

animate:{
type:'delayed',
duration:300},

axisX:{
showAxis:true,
showLines:true,
showLabels:true,
showTicks:true,
zeroAxis:false,
orient:'bottom',
label:{
fontFamily:'Arial',
fontSize:10,
fontWeight:true,
fill:'#34495E'}},


axisY:{
showAxis:true,
showLines:true,
showLabels:true,
showTicks:true,
zeroAxis:false,
orient:'left',
label:{
fontFamily:'Arial',
fontSize:10,
fontWeight:true,
fill:'#34495E'}}};




return(
_react2.default.createElement(_reactNative.View,null,
_react2.default.createElement(_reactNativePathjsCharts.StockLine,{data:this.state.usage,options:options,xKey:'x',yKey:'y'})));


}}]);return LineChart;}(_react.Component);


var mapStateToProps=function mapStateToProps(state){var _state$calendar=
state.calendar,year=_state$calendar.year,month=_state$calendar.month;

return{year:year,month:month};
};exports.default=

(0,_reactRedux.connect)(mapStateToProps)(LineChart);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpbmVDaGFydC5qcyJdLCJuYW1lcyI6WyJMaW5lQ2hhcnQiLCJwcm9wcyIsInN0YXRlIiwidXNhZ2UiLCJ4IiwieSIsInllYXIiLCJtb250aCIsImF1dGgiLCJjdXJyZW50VXNlciIsImRhdGFiYXNlIiwicmVmIiwidWlkIiwib24iLCJwcmVwYXJlVXNhZ2UiLCJzbmFwc2hvdCIsInZhbCIsInNldFN0YXRlIiwiaXNMZWFwIiwiZGF0YSIsImRheXNJbk1vbnRoIiwiZ2V0TnVtYmVyT2ZEYXlzIiwiZGF5IiwiZGF0ZSIsImkiLCJwdXNoIiwicGFyc2VJbnQiLCJvcHRpb25zIiwid2lkdGgiLCJoZWlnaHQiLCJjb2xvciIsIm1hcmdpbiIsInRvcCIsImxlZnQiLCJib3R0b20iLCJyaWdodCIsImFuaW1hdGUiLCJ0eXBlIiwiZHVyYXRpb24iLCJheGlzWCIsInNob3dBeGlzIiwic2hvd0xpbmVzIiwic2hvd0xhYmVscyIsInNob3dUaWNrcyIsInplcm9BeGlzIiwib3JpZW50IiwibGFiZWwiLCJmb250RmFtaWx5IiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiZmlsbCIsImF4aXNZIiwibWFwU3RhdGVUb1Byb3BzIiwiY2FsZW5kYXIiXSwibWFwcGluZ3MiOiJ1akJBQUEsNEI7QUFDQTtBQUNBO0FBQ0Esa0M7QUFDQSxtRTs7QUFFTUEsUztBQUNKLG1CQUFZQyxLQUFaLENBQW1CO0FBQ1hBLEtBRFc7O0FBR2pCLE1BQUtDLEtBQUwsQ0FBYTtBQUNYQyxNQUFPO0FBQ0w7QUFDRSxDQUFFQyxFQUFHLENBQUwsQ0FBUUMsRUFBRyxDQUFYLENBREYsQ0FESyxDQURJLENBQWIsQ0FIaUI7Ozs7QUFVbEIsQzs7QUFFb0I7QUFDSyxLQUFLSixLQURWLENBQ1hLLElBRFcsUUFDWEEsSUFEVyxDQUNMQyxLQURLLFFBQ0xBLEtBREs7QUFFSyxtQkFBU0MsSUFBVCxFQUZMLENBRVhDLFdBRlcsZ0JBRVhBLFdBRlc7O0FBSW5CO0FBQ0dDLFFBREg7QUFFR0MsR0FGSCxXQUVp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QixPQUE1QyxDQUFxRCxLQUFLLEdBQTFELENBQThELEtBQUssR0FBbkUsRUFERixDQURGOzs7QUFLRCxDOzs7QUFHSCxHQUFNeUIsaUJBQWtCLFFBQWxCQSxnQkFBa0IsQ0FBQ2xELEtBQUQsQ0FBVztBQUNUQSxNQUFNbUQsUUFERyxDQUN6Qi9DLElBRHlCLGlCQUN6QkEsSUFEeUIsQ0FDbkJDLEtBRG1CLGlCQUNuQkEsS0FEbUI7O0FBR2pDLE1BQU8sQ0FBRUQsU0FBRixDQUFRQyxXQUFSLENBQVA7QUFDRCxDQUpELEM7O0FBTWUsd0JBQVE2QyxlQUFSLEVBQXlCcEQsU0FBekIsQyIsImZpbGUiOiJMaW5lQ2hhcnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IGZpcmViYXNlIGZyb20gJ2ZpcmViYXNlJztcbmltcG9ydCB7IFN0b2NrTGluZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXRoanMtY2hhcnRzJztcblxuY2xhc3MgTGluZUNoYXJ0IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgdXNhZ2U6IFtcbiAgICAgICAgW1xuICAgICAgICAgIHsgeDogMCwgeTogMCB9XG4gICAgICAgIF1cbiAgICAgIF1cbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIGNvbnN0IHsgeWVhciwgbW9udGggfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBjdXJyZW50VXNlciB9ID0gZmlyZWJhc2UuYXV0aCgpO1xuXG4gICAgZmlyZWJhc2VcbiAgICAgIC5kYXRhYmFzZSgpXG4gICAgICAucmVmKGAvdXNlcnMvJHtjdXJyZW50VXNlci51aWR9L3VzYWdlLyR7eWVhcn0vJHttb250aH1gKVxuICAgICAgLm9uKCd2YWx1ZScsIHNuYXBzaG90ID0+IHtcbiAgICAgICAgY29uc3QgdXNhZ2UgPSB0aGlzLnByZXBhcmVVc2FnZSh5ZWFyLCBtb250aCwgc25hcHNob3QudmFsKCkpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdXNhZ2UgfSk7XG4gICAgICB9KTtcbiAgfVxuXG4gIGdldE51bWJlck9mRGF5cyh5ZWFyLCBtb250aCkge1xuICAgIGNvbnN0IGlzTGVhcCA9ICgoeWVhciAlIDQpID09PSAwICYmICgoeWVhciAlIDEwMCkgIT09IDAgfHwgKHllYXIgJSA0MDApID09PSAwKSk7XG4gICAgcmV0dXJuIFszMSwgKGlzTGVhcCA/IDI5IDogMjgpLCAzMSwgMzAsIDMxLCAzMCwgMzEsIDMxLCAzMCwgMzEsIDMwLCAzMV1bbW9udGggLSAxXTtcbiAgfVxuXG4gIHByZXBhcmVVc2FnZSh5ZWFyLCBtb250aCwgZGF0YSkge1xuICAgIGNvbnN0IGRheXNJbk1vbnRoID0gdGhpcy5nZXROdW1iZXJPZkRheXMoeWVhciwgbW9udGgpO1xuICAgIGNvbnN0IHVzYWdlID0gW1xuICAgICAgW11cbiAgICBdO1xuICAgIGxldCBkYXk7XG4gICAgbGV0IGRhdGU7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRheXNJbk1vbnRoOyBpKyspIHtcbiAgICAgIGRheSA9IGkgPCAxMSA/IGAwJHtpICsgMX1gIDogaSArIDE7XG4gICAgICBkYXRlID0gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9YDtcblxuICAgICAgaWYgKGRhdGFbZGF0ZV0pIHtcbiAgICAgICAgdXNhZ2VbMF0ucHVzaCh7IHg6IGkgKyAxLCB5OiBwYXJzZUludChkYXRhW2RhdGVdLnVzYWdlLCAxMCkgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1c2FnZVswXS5wdXNoKHsgeDogaSArIDEsIHk6IDAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHVzYWdlO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICB3aWR0aDogMjgwLFxuICAgICAgaGVpZ2h0OiAyODAsXG4gICAgICBjb2xvcjogJyMyOTgwQjknLFxuICAgICAgbWFyZ2luOiB7XG4gICAgICAgIHRvcDogMjAsXG4gICAgICAgIGxlZnQ6IDQ1LFxuICAgICAgICBib3R0b206IDI1LFxuICAgICAgICByaWdodDogMjBcbiAgICAgIH0sXG4gICAgICBhbmltYXRlOiB7XG4gICAgICAgIHR5cGU6ICdkZWxheWVkJyxcbiAgICAgICAgZHVyYXRpb246IDMwMFxuICAgICAgfSxcbiAgICAgIGF4aXNYOiB7XG4gICAgICAgIHNob3dBeGlzOiB0cnVlLFxuICAgICAgICBzaG93TGluZXM6IHRydWUsXG4gICAgICAgIHNob3dMYWJlbHM6IHRydWUsXG4gICAgICAgIHNob3dUaWNrczogdHJ1ZSxcbiAgICAgICAgemVyb0F4aXM6IGZhbHNlLFxuICAgICAgICBvcmllbnQ6ICdib3R0b20nLFxuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgIGZvbnRGYW1pbHk6ICdBcmlhbCcsXG4gICAgICAgICAgZm9udFNpemU6IDEwLFxuICAgICAgICAgIGZvbnRXZWlnaHQ6IHRydWUsXG4gICAgICAgICAgZmlsbDogJyMzNDQ5NUUnXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBheGlzWToge1xuICAgICAgICBzaG93QXhpczogdHJ1ZSxcbiAgICAgICAgc2hvd0xpbmVzOiB0cnVlLFxuICAgICAgICBzaG93TGFiZWxzOiB0cnVlLFxuICAgICAgICBzaG93VGlja3M6IHRydWUsXG4gICAgICAgIHplcm9BeGlzOiBmYWxzZSxcbiAgICAgICAgb3JpZW50OiAnbGVmdCcsXG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgZm9udEZhbWlseTogJ0FyaWFsJyxcbiAgICAgICAgICBmb250U2l6ZTogMTAsXG4gICAgICAgICAgZm9udFdlaWdodDogdHJ1ZSxcbiAgICAgICAgICBmaWxsOiAnIzM0NDk1RSdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFZpZXc+XG4gICAgICAgIDxTdG9ja0xpbmUgZGF0YT17dGhpcy5zdGF0ZS51c2FnZX0gb3B0aW9ucz17b3B0aW9uc30geEtleT0neCcgeUtleT0neScgLz5cbiAgICAgIDwvVmlldz5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4ge1xuICBjb25zdCB7IHllYXIsIG1vbnRoIH0gPSBzdGF0ZS5jYWxlbmRhcjtcblxuICByZXR1cm4geyB5ZWFyLCBtb250aCB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKExpbmVDaGFydCk7XG4iXX0=