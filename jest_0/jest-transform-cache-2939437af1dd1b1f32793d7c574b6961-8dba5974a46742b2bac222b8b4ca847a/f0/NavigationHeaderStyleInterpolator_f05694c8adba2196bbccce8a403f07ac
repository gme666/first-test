2add75dca9060c5c0cf675842d76716a
































'use strict';

















function forLeft(props){var
position=props.position,scene=props.scene;var
index=scene.index;
return{
opacity:position.interpolate({
inputRange:[index-1,index,index+1],
outputRange:[0,1,0]})};


}

function forCenter(props){var
position=props.position,scene=props.scene;var
index=scene.index;
return{
opacity:position.interpolate({
inputRange:[index-1,index,index+1],
outputRange:[0,1,0]}),

transform:[
{
translateX:position.interpolate({
inputRange:[index-1,index+1],
outputRange:[200,-200]})}]};




}

function forRight(props){var
position=props.position,scene=props.scene;var
index=scene.index;
return{
opacity:position.interpolate({
inputRange:[index-1,index,index+1],
outputRange:[0,1,0]})};


}

module.exports={
forCenter:forCenter,
forLeft:forLeft,
forRight:forRight};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdmlnYXRpb25IZWFkZXJTdHlsZUludGVycG9sYXRvci5qcyJdLCJuYW1lcyI6WyJmb3JMZWZ0IiwicHJvcHMiLCJwb3NpdGlvbiIsInNjZW5lIiwiaW5kZXgiLCJvcGFjaXR5IiwiaW50ZXJwb2xhdGUiLCJpbnB1dFJhbmdlIiwib3V0cHV0UmFuZ2UiLCJmb3JDZW50ZXIiLCJ0cmFuc2Zvcm0iLCJ0cmFuc2xhdGVYIiwiZm9yUmlnaHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBLFFBQVNBLFFBQVQsQ0FBaUJDLEtBQWpCLENBQThEO0FBQ3JEQyxRQURxRCxDQUNsQ0QsS0FEa0MsQ0FDckRDLFFBRHFELENBQzNDQyxLQUQyQyxDQUNsQ0YsS0FEa0MsQ0FDM0NFLEtBRDJDO0FBRXJEQyxLQUZxRCxDQUU1Q0QsS0FGNEMsQ0FFckRDLEtBRnFEO0FBRzVELE1BQU87QUFDTEMsUUFBU0gsU0FBU0ksV0FBVCxDQUFxQjtBQUM1QkMsV0FBWSxDQUFFSCxNQUFRLENBQVYsQ0FBYUEsS0FBYixDQUFvQkEsTUFBUSxDQUE1QixDQURnQjtBQUU1QkksWUFBYSxDQUFFLENBQUYsQ0FBSyxDQUFMLENBQVEsQ0FBUixDQUZlLENBQXJCLENBREosQ0FBUDs7O0FBTUQ7O0FBRUQsUUFBU0MsVUFBVCxDQUFtQlIsS0FBbkIsQ0FBZ0U7QUFDdkRDLFFBRHVELENBQ3BDRCxLQURvQyxDQUN2REMsUUFEdUQsQ0FDN0NDLEtBRDZDLENBQ3BDRixLQURvQyxDQUM3Q0UsS0FENkM7QUFFdkRDLEtBRnVELENBRTlDRCxLQUY4QyxDQUV2REMsS0FGdUQ7QUFHOUQsTUFBTztBQUNMQyxRQUFRSCxTQUFTSSxXQUFULENBQXFCO0FBQzNCQyxXQUFZLENBQUVILE1BQVEsQ0FBVixDQUFhQSxLQUFiLENBQW9CQSxNQUFRLENBQTVCLENBRGU7QUFFM0JJLFlBQWEsQ0FBRSxDQUFGLENBQUssQ0FBTCxDQUFRLENBQVIsQ0FGYyxDQUFyQixDQURIOztBQUtMRSxVQUFXO0FBQ1Q7QUFDRUMsV0FBWVQsU0FBU0ksV0FBVCxDQUFxQjtBQUMvQkMsV0FBWSxDQUFFSCxNQUFRLENBQVYsQ0FBYUEsTUFBUSxDQUFyQixDQURtQjtBQUUvQkksWUFBYSxDQUFFLEdBQUYsQ0FBTyxDQUFDLEdBQVIsQ0FGa0IsQ0FBckIsQ0FEZCxDQURTLENBTE4sQ0FBUDs7Ozs7QUFjRDs7QUFFRCxRQUFTSSxTQUFULENBQWtCWCxLQUFsQixDQUErRDtBQUN0REMsUUFEc0QsQ0FDbkNELEtBRG1DLENBQ3REQyxRQURzRCxDQUM1Q0MsS0FENEMsQ0FDbkNGLEtBRG1DLENBQzVDRSxLQUQ0QztBQUV0REMsS0FGc0QsQ0FFN0NELEtBRjZDLENBRXREQyxLQUZzRDtBQUc3RCxNQUFPO0FBQ0xDLFFBQVNILFNBQVNJLFdBQVQsQ0FBcUI7QUFDNUJDLFdBQVksQ0FBRUgsTUFBUSxDQUFWLENBQWFBLEtBQWIsQ0FBb0JBLE1BQVEsQ0FBNUIsQ0FEZ0I7QUFFNUJJLFlBQWEsQ0FBRSxDQUFGLENBQUssQ0FBTCxDQUFRLENBQVIsQ0FGZSxDQUFyQixDQURKLENBQVA7OztBQU1EOztBQUVESyxPQUFPQyxPQUFQLENBQWlCO0FBQ2ZMLG1CQURlO0FBRWZULGVBRmU7QUFHZlksaUJBSGUsQ0FBakIiLCJmaWxlIjoiTmF2aWdhdGlvbkhlYWRlclN0eWxlSW50ZXJwb2xhdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEZhY2Vib29rLCBJbmMuIChcIkZhY2Vib29rXCIpIG93bnMgYWxsIHJpZ2h0LCB0aXRsZSBhbmQgaW50ZXJlc3QsIGluY2x1ZGluZ1xuICogYWxsIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBhbmQgb3RoZXIgcHJvcHJpZXRhcnkgcmlnaHRzLCBpbiBhbmQgdG8gdGhlIFJlYWN0XG4gKiBOYXRpdmUgQ3VzdG9tQ29tcG9uZW50cyBzb2Z0d2FyZSAodGhlIFwiU29mdHdhcmVcIikuICBTdWJqZWN0IHRvIHlvdXJcbiAqIGNvbXBsaWFuY2Ugd2l0aCB0aGVzZSB0ZXJtcywgeW91IGFyZSBoZXJlYnkgZ3JhbnRlZCBhIG5vbi1leGNsdXNpdmUsXG4gKiB3b3JsZHdpZGUsIHJveWFsdHktZnJlZSBjb3B5cmlnaHQgbGljZW5zZSB0byAoMSkgdXNlIGFuZCBjb3B5IHRoZSBTb2Z0d2FyZTtcbiAqIGFuZCAoMikgcmVwcm9kdWNlIGFuZCBkaXN0cmlidXRlIHRoZSBTb2Z0d2FyZSBhcyBwYXJ0IG9mIHlvdXIgb3duIHNvZnR3YXJlXG4gKiAoXCJZb3VyIFNvZnR3YXJlXCIpLiAgRmFjZWJvb2sgcmVzZXJ2ZXMgYWxsIHJpZ2h0cyBub3QgZXhwcmVzc2x5IGdyYW50ZWQgdG9cbiAqIHlvdSBpbiB0aGlzIGxpY2Vuc2UgYWdyZWVtZW50LlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBBTkQgRE9DVU1FTlRBVElPTiwgSUYgQU5ZLCBBUkUgUFJPVklERUQgXCJBUyBJU1wiIEFORCBBTlkgRVhQUkVTU1xuICogT1IgSU1QTElFRCBXQVJSQU5USUVTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFU1xuICogT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSkgQVJFIERJU0NMQUlNRUQuXG4gKiBJTiBOTyBFVkVOVCBTSEFMTCBGQUNFQk9PSyBPUiBJVFMgQUZGSUxJQVRFUywgT0ZGSUNFUlMsIERJUkVDVE9SUyBPUlxuICogRU1QTE9ZRUVTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsXG4gKiBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sXG4gKiBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLFxuICogV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1JcbiAqIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRIRSBTT0ZUV0FSRSwgRVZFTiBJRlxuICogQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIE5hdmlnYXRpb25IZWFkZXJTdHlsZUludGVycG9sYXRvclxuICogQGZsb3dcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5cbmltcG9ydCB0eXBlICB7XG4gIE5hdmlnYXRpb25TY2VuZVJlbmRlcmVyUHJvcHMsXG59IGZyb20gJ05hdmlnYXRpb25UeXBlRGVmaW5pdGlvbic7XG5cbi8qKlxuICogVXRpbGl0eSB0aGF0IGJ1aWxkcyB0aGUgc3R5bGUgZm9yIHRoZSBuYXZpZ2F0aW9uIGhlYWRlci5cbiAqXG4gKiArLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0rXG4gKiB8ICAgICAgICAgICAgIHwgICAgICAgICAgICAgfCAgICAgICAgICAgICB8XG4gKiB8ICAgIExlZnQgICAgIHwgICBUaXRsZSAgICAgfCAgIFJpZ2h0ICAgICB8XG4gKiB8ICBDb21wb25lbnQgIHwgIENvbXBvbmVudCAgfCBDb21wb25lbnQgICB8XG4gKiB8ICAgICAgICAgICAgIHwgICAgICAgICAgICAgfCAgICAgICAgICAgICB8XG4gKiArLS0tLS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0rXG4gKi9cblxuZnVuY3Rpb24gZm9yTGVmdChwcm9wczogTmF2aWdhdGlvblNjZW5lUmVuZGVyZXJQcm9wcyk6IE9iamVjdCB7XG4gIGNvbnN0IHtwb3NpdGlvbiwgc2NlbmV9ID0gcHJvcHM7XG4gIGNvbnN0IHtpbmRleH0gPSBzY2VuZTtcbiAgcmV0dXJuIHtcbiAgICBvcGFjaXR5OiBwb3NpdGlvbi5pbnRlcnBvbGF0ZSh7XG4gICAgICBpbnB1dFJhbmdlOiBbIGluZGV4IC0gMSwgaW5kZXgsIGluZGV4ICsgMSBdLFxuICAgICAgb3V0cHV0UmFuZ2U6IFsgMCwgMSwgMCBdLFxuICAgIH0pLFxuICB9O1xufVxuXG5mdW5jdGlvbiBmb3JDZW50ZXIocHJvcHM6IE5hdmlnYXRpb25TY2VuZVJlbmRlcmVyUHJvcHMpOiBPYmplY3Qge1xuICBjb25zdCB7cG9zaXRpb24sIHNjZW5lfSA9IHByb3BzO1xuICBjb25zdCB7aW5kZXh9ID0gc2NlbmU7XG4gIHJldHVybiB7XG4gICAgb3BhY2l0eTpwb3NpdGlvbi5pbnRlcnBvbGF0ZSh7XG4gICAgICBpbnB1dFJhbmdlOiBbIGluZGV4IC0gMSwgaW5kZXgsIGluZGV4ICsgMSBdLFxuICAgICAgb3V0cHV0UmFuZ2U6IFsgMCwgMSwgMCBdLFxuICAgIH0pLFxuICAgIHRyYW5zZm9ybTogW1xuICAgICAge1xuICAgICAgICB0cmFuc2xhdGVYOiBwb3NpdGlvbi5pbnRlcnBvbGF0ZSh7XG4gICAgICAgICAgaW5wdXRSYW5nZTogWyBpbmRleCAtIDEsIGluZGV4ICsgMSBdLFxuICAgICAgICAgIG91dHB1dFJhbmdlOiBbIDIwMCwgLTIwMCBdLFxuICAgICAgICB9KSxcbiAgICAgIH1cbiAgICBdLFxuICB9O1xufVxuXG5mdW5jdGlvbiBmb3JSaWdodChwcm9wczogTmF2aWdhdGlvblNjZW5lUmVuZGVyZXJQcm9wcyk6IE9iamVjdCB7XG4gIGNvbnN0IHtwb3NpdGlvbiwgc2NlbmV9ID0gcHJvcHM7XG4gIGNvbnN0IHtpbmRleH0gPSBzY2VuZTtcbiAgcmV0dXJuIHtcbiAgICBvcGFjaXR5OiBwb3NpdGlvbi5pbnRlcnBvbGF0ZSh7XG4gICAgICBpbnB1dFJhbmdlOiBbIGluZGV4IC0gMSwgaW5kZXgsIGluZGV4ICsgMSBdLFxuICAgICAgb3V0cHV0UmFuZ2U6IFsgMCwgMSwgMCBdLFxuICAgIH0pLFxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZm9yQ2VudGVyLFxuICBmb3JMZWZ0LFxuICBmb3JSaWdodCxcbn07XG4iXX0=