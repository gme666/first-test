204edc1dda3b57641bc91cb0f90ed67c
Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};exports.default=






styleConstructor;var _reactNative=require('react-native');var _style=require('../../../style');var defaultStyle=_interopRequireWildcard(_style);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}var STYLESHEET_ID='stylesheet.day.interactive';var FILLER_HEIGHT=34;function styleConstructor(){var theme=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};
var appStyle=_extends({},defaultStyle,theme);
return _reactNative.StyleSheet.create(_extends({
wrapper:{
flex:1,
alignItems:'center',
alignSelf:'stretch',
marginLeft:-1},

base:{

width:38,
height:FILLER_HEIGHT,
alignItems:'center'},

fillers:{
position:'absolute',
height:FILLER_HEIGHT,
flexDirection:'row',
left:0,
right:0},

leftFiller:{
height:FILLER_HEIGHT,
flex:1},

rightFiller:{
height:FILLER_HEIGHT,
flex:1},

text:{
marginTop:7,
fontSize:appStyle.textDayFontSize,
fontFamily:appStyle.textDayFontFamily,
fontWeight:'300',
color:appStyle.dayTextColor||'#2d4150',
backgroundColor:'rgba(255, 255, 255, 0)'},

todayText:{
fontWeight:'500',
color:theme.todayTextColor||appStyle.dayTextColor},


disabledText:{
color:appStyle.textDisabledColor},

quickAction:{
backgroundColor:'white',
borderWidth:1,
borderColor:'#c1e4fe'},

quickActionText:{
marginTop:6,
color:appStyle.textColor},

firstQuickAction:{
backgroundColor:appStyle.textLinkColor},

firstQuickActionText:{
color:'white'},

naText:{
color:'#b6c1cd'}},

theme[STYLESHEET_ID]||{}));

}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmpzIl0sIm5hbWVzIjpbInN0eWxlQ29uc3RydWN0b3IiLCJkZWZhdWx0U3R5bGUiLCJTVFlMRVNIRUVUX0lEIiwiRklMTEVSX0hFSUdIVCIsInRoZW1lIiwiYXBwU3R5bGUiLCJjcmVhdGUiLCJ3cmFwcGVyIiwiZmxleCIsImFsaWduSXRlbXMiLCJhbGlnblNlbGYiLCJtYXJnaW5MZWZ0IiwiYmFzZSIsIndpZHRoIiwiaGVpZ2h0IiwiZmlsbGVycyIsInBvc2l0aW9uIiwiZmxleERpcmVjdGlvbiIsImxlZnQiLCJyaWdodCIsImxlZnRGaWxsZXIiLCJyaWdodEZpbGxlciIsInRleHQiLCJtYXJnaW5Ub3AiLCJmb250U2l6ZSIsInRleHREYXlGb250U2l6ZSIsImZvbnRGYW1pbHkiLCJ0ZXh0RGF5Rm9udEZhbWlseSIsImZvbnRXZWlnaHQiLCJjb2xvciIsImRheVRleHRDb2xvciIsImJhY2tncm91bmRDb2xvciIsInRvZGF5VGV4dCIsInRvZGF5VGV4dENvbG9yIiwiZGlzYWJsZWRUZXh0IiwidGV4dERpc2FibGVkQ29sb3IiLCJxdWlja0FjdGlvbiIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJxdWlja0FjdGlvblRleHQiLCJ0ZXh0Q29sb3IiLCJmaXJzdFF1aWNrQWN0aW9uIiwidGV4dExpbmtDb2xvciIsImZpcnN0UXVpY2tBY3Rpb25UZXh0IiwibmFUZXh0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBT3dCQSxnQixDQVB4Qix5Q0FDQSxxQyxHQUFZQyxhLDJRQUVaLEdBQU1DLGVBQWdCLDRCQUF0QixDQUVBLEdBQU1DLGVBQWdCLEVBQXRCLENBRWUsUUFBU0gsaUJBQVQsRUFBb0MsSUFBVkksTUFBVSwyREFBSixFQUFJO0FBQ2pELEdBQU1DLHNCQUFlSixZQUFmLENBQWdDRyxLQUFoQyxDQUFOO0FBQ0EsTUFBTyx5QkFBV0UsTUFBWDtBQUNMQyxRQUFTO0FBQ1BDLEtBQU0sQ0FEQztBQUVQQyxXQUFZLFFBRkw7QUFHUEMsVUFBVyxTQUhKO0FBSVBDLFdBQVksQ0FBQyxDQUpOLENBREo7O0FBT0xDLEtBQU07O0FBRUpDLE1BQU8sRUFGSDtBQUdKQyxPQUFRWCxhQUhKO0FBSUpNLFdBQVksUUFKUixDQVBEOztBQWFMTSxRQUFTO0FBQ1BDLFNBQVUsVUFESDtBQUVQRixPQUFRWCxhQUZEO0FBR1BjLGNBQWUsS0FIUjtBQUlQQyxLQUFNLENBSkM7QUFLUEMsTUFBTyxDQUxBLENBYko7O0FBb0JMQyxXQUFZO0FBQ1ZOLE9BQVFYLGFBREU7QUFFVkssS0FBTSxDQUZJLENBcEJQOztBQXdCTGEsWUFBYTtBQUNYUCxPQUFRWCxhQURHO0FBRVhLLEtBQU0sQ0FGSyxDQXhCUjs7QUE0QkxjLEtBQU07QUFDSkMsVUFBVyxDQURQO0FBRUpDLFNBQVVuQixTQUFTb0IsZUFGZjtBQUdKQyxXQUFZckIsU0FBU3NCLGlCQUhqQjtBQUlKQyxXQUFZLEtBSlI7QUFLSkMsTUFBT3hCLFNBQVN5QixZQUFULEVBQXlCLFNBTDVCO0FBTUpDLGdCQUFpQix3QkFOYixDQTVCRDs7QUFvQ0xDLFVBQVc7QUFDVEosV0FBWSxLQURIO0FBRVRDLE1BQU96QixNQUFNNkIsY0FBTixFQUF3QjVCLFNBQVN5QixZQUYvQixDQXBDTjs7O0FBeUNMSSxhQUFjO0FBQ1pMLE1BQU94QixTQUFTOEIsaUJBREosQ0F6Q1Q7O0FBNENMQyxZQUFhO0FBQ1hMLGdCQUFpQixPQUROO0FBRVhNLFlBQWEsQ0FGRjtBQUdYQyxZQUFhLFNBSEYsQ0E1Q1I7O0FBaURMQyxnQkFBaUI7QUFDZmhCLFVBQVcsQ0FESTtBQUVmTSxNQUFPeEIsU0FBU21DLFNBRkQsQ0FqRFo7O0FBcURMQyxpQkFBa0I7QUFDaEJWLGdCQUFpQjFCLFNBQVNxQyxhQURWLENBckRiOztBQXdETEMscUJBQXNCO0FBQ3BCZCxNQUFPLE9BRGEsQ0F4RGpCOztBQTJETGUsT0FBUTtBQUNOZixNQUFPLFNBREQsQ0EzREg7O0FBOEREekIsTUFBTUYsYUFBTixHQUF3QixFQTlEdkIsRUFBUDs7QUFnRUQiLCJmaWxlIjoic3R5bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0eWxlU2hlZXR9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgKiBhcyBkZWZhdWx0U3R5bGUgZnJvbSAnLi4vLi4vLi4vc3R5bGUnO1xuXG5jb25zdCBTVFlMRVNIRUVUX0lEID0gJ3N0eWxlc2hlZXQuZGF5LmludGVyYWN0aXZlJztcblxuY29uc3QgRklMTEVSX0hFSUdIVCA9IDM0O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdHlsZUNvbnN0cnVjdG9yKHRoZW1lPXt9KSB7XG4gIGNvbnN0IGFwcFN0eWxlID0gey4uLmRlZmF1bHRTdHlsZSwgLi4udGhlbWV9O1xuICByZXR1cm4gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAgIHdyYXBwZXI6IHtcbiAgICAgIGZsZXg6IDEsXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGFsaWduU2VsZjogJ3N0cmV0Y2gnLFxuICAgICAgbWFyZ2luTGVmdDogLTFcbiAgICB9LFxuICAgIGJhc2U6IHtcbiAgICAgIC8vYm9yZGVyV2lkdGg6IDEsXG4gICAgICB3aWR0aDogMzgsXG4gICAgICBoZWlnaHQ6IEZJTExFUl9IRUlHSFQsXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJ1xuICAgIH0sXG4gICAgZmlsbGVyczoge1xuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBoZWlnaHQ6IEZJTExFUl9IRUlHSFQsXG4gICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgIGxlZnQ6IDAsXG4gICAgICByaWdodDogMFxuICAgIH0sXG4gICAgbGVmdEZpbGxlcjoge1xuICAgICAgaGVpZ2h0OiBGSUxMRVJfSEVJR0hULFxuICAgICAgZmxleDogMVxuICAgIH0sXG4gICAgcmlnaHRGaWxsZXI6IHtcbiAgICAgIGhlaWdodDogRklMTEVSX0hFSUdIVCxcbiAgICAgIGZsZXg6IDFcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIG1hcmdpblRvcDogNyxcbiAgICAgIGZvbnRTaXplOiBhcHBTdHlsZS50ZXh0RGF5Rm9udFNpemUsXG4gICAgICBmb250RmFtaWx5OiBhcHBTdHlsZS50ZXh0RGF5Rm9udEZhbWlseSxcbiAgICAgIGZvbnRXZWlnaHQ6ICczMDAnLFxuICAgICAgY29sb3I6IGFwcFN0eWxlLmRheVRleHRDb2xvciB8fCAnIzJkNDE1MCcsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDApJ1xuICAgIH0sXG4gICAgdG9kYXlUZXh0OiB7XG4gICAgICBmb250V2VpZ2h0OiAnNTAwJyxcbiAgICAgIGNvbG9yOiB0aGVtZS50b2RheVRleHRDb2xvciB8fCBhcHBTdHlsZS5kYXlUZXh0Q29sb3IsXG4gICAgICAvL2NvbG9yOiBhcHBTdHlsZS50ZXh0TGlua0NvbG9yXG4gICAgfSxcbiAgICBkaXNhYmxlZFRleHQ6IHtcbiAgICAgIGNvbG9yOiBhcHBTdHlsZS50ZXh0RGlzYWJsZWRDb2xvclxuICAgIH0sXG4gICAgcXVpY2tBY3Rpb246IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcbiAgICAgIGJvcmRlcldpZHRoOiAxLFxuICAgICAgYm9yZGVyQ29sb3I6ICcjYzFlNGZlJ1xuICAgIH0sXG4gICAgcXVpY2tBY3Rpb25UZXh0OiB7XG4gICAgICBtYXJnaW5Ub3A6IDYsXG4gICAgICBjb2xvcjogYXBwU3R5bGUudGV4dENvbG9yXG4gICAgfSxcbiAgICBmaXJzdFF1aWNrQWN0aW9uOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFwcFN0eWxlLnRleHRMaW5rQ29sb3JcbiAgICB9LFxuICAgIGZpcnN0UXVpY2tBY3Rpb25UZXh0OiB7XG4gICAgICBjb2xvcjogJ3doaXRlJ1xuICAgIH0sXG4gICAgbmFUZXh0OiB7XG4gICAgICBjb2xvcjogJyNiNmMxY2QnXG4gICAgfSxcbiAgICAuLi4odGhlbWVbU1RZTEVTSEVFVF9JRF0gfHwge30pXG4gIH0pO1xufVxuIl19