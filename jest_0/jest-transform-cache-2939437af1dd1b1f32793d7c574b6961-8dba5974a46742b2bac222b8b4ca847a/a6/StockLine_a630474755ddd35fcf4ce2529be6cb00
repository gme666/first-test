48fa4b7b9779e6fb1bf05fd286664fdf
Object.defineProperty(exports,"__esModule",{value:true});

















var _Line=require('./Line.js');var _Line2=_interopRequireDefault(_Line);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

var StockLine=require('paths-js/stock');var

StockLineChart=function(_LineChart){_inherits(StockLineChart,_LineChart);
function StockLineChart(props){_classCallCheck(this,StockLineChart);return _possibleConstructorReturn(this,(StockLineChart.__proto__||Object.getPrototypeOf(StockLineChart)).call(this,
props,StockLine));
}return StockLineChart;}(_Line2.default);StockLineChart.

defaultProps={
options:{
width:600,
height:600,
color:'#2980B9',
margin:{top:40,left:60,bottom:50,right:20},
animate:{
type:'delayed',
duration:200,
fillTransition:3},

axisX:{
showAxis:true,
showLines:true,
showLabels:true,
showTicks:true,
zeroAxis:false,
orient:'bottom',
label:{
fontFamily:'Arial',
fontSize:14,
bold:true,
color:'#34495E'}},


axisY:{
showAxis:true,
showLines:true,
showLabels:true,
showTicks:true,
zeroAxis:false,
orient:'left',
label:{
fontFamily:'Arial',
fontSize:14,
bold:true,
color:'#34495E'}}}};exports.default=StockLineChart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0b2NrTGluZS5qcyJdLCJuYW1lcyI6WyJTdG9ja0xpbmUiLCJyZXF1aXJlIiwiU3RvY2tMaW5lQ2hhcnQiLCJwcm9wcyIsImRlZmF1bHRQcm9wcyIsIm9wdGlvbnMiLCJ3aWR0aCIsImhlaWdodCIsImNvbG9yIiwibWFyZ2luIiwidG9wIiwibGVmdCIsImJvdHRvbSIsInJpZ2h0IiwiYW5pbWF0ZSIsInR5cGUiLCJkdXJhdGlvbiIsImZpbGxUcmFuc2l0aW9uIiwiYXhpc1giLCJzaG93QXhpcyIsInNob3dMaW5lcyIsInNob3dMYWJlbHMiLCJzaG93VGlja3MiLCJ6ZXJvQXhpcyIsIm9yaWVudCIsImxhYmVsIiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwiYm9sZCIsImF4aXNZIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkEsK0I7O0FBRUEsR0FBTUEsV0FBWUMsUUFBUSxnQkFBUixDQUFsQixDOztBQUVxQkMsYztBQUNuQix3QkFBWUMsS0FBWixDQUFtQjtBQUNYQSxLQURXLENBQ0pILFNBREk7QUFFbEIsQyx3Q0FIa0JFLGM7O0FBS1pFLFksQ0FBaUI7QUFDdEJDLFFBQVM7QUFDUEMsTUFBTyxHQURBO0FBRVBDLE9BQVEsR0FGRDtBQUdQQyxNQUFPLFNBSEE7QUFJUEMsT0FBUSxDQUFDQyxJQUFLLEVBQU4sQ0FBVUMsS0FBTSxFQUFoQixDQUFvQkMsT0FBUSxFQUE1QixDQUFnQ0MsTUFBTyxFQUF2QyxDQUpEO0FBS1BDLFFBQVM7QUFDUEMsS0FBTSxTQURDO0FBRVBDLFNBQVUsR0FGSDtBQUdQQyxlQUFlLENBSFIsQ0FMRjs7QUFVUEMsTUFBTztBQUNMQyxTQUFVLElBREw7QUFFTEMsVUFBVyxJQUZOO0FBR0xDLFdBQVksSUFIUDtBQUlMQyxVQUFXLElBSk47QUFLTEMsU0FBVSxLQUxMO0FBTUxDLE9BQVEsUUFOSDtBQU9MQyxNQUFPO0FBQ0xDLFdBQVksT0FEUDtBQUVMQyxTQUFVLEVBRkw7QUFHTEMsS0FBTSxJQUhEO0FBSUxwQixNQUFPLFNBSkYsQ0FQRixDQVZBOzs7QUF3QlBxQixNQUFPO0FBQ0xWLFNBQVUsSUFETDtBQUVMQyxVQUFXLElBRk47QUFHTEMsV0FBWSxJQUhQO0FBSUxDLFVBQVcsSUFKTjtBQUtMQyxTQUFVLEtBTEw7QUFNTEMsT0FBUSxNQU5IO0FBT0xDLE1BQU87QUFDTEMsV0FBWSxPQURQO0FBRUxDLFNBQVUsRUFGTDtBQUdMQyxLQUFNLElBSEQ7QUFJTHBCLE1BQU8sU0FKRixDQVBGLENBeEJBLENBRGEsQyxpQkFMTE4sYyIsImZpbGUiOiJTdG9ja0xpbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMTYgQ2FwaXRhbCBPbmUgU2VydmljZXMsIExMQ1xuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5TUERYLUNvcHlyaWdodDogQ29weXJpZ2h0IChjKSBDYXBpdGFsIE9uZSBTZXJ2aWNlcywgTExDXG5TUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuKi9cblxuaW1wb3J0IExpbmVDaGFydCBmcm9tICcuL0xpbmUuanMnXG5cbmNvbnN0IFN0b2NrTGluZSA9IHJlcXVpcmUoJ3BhdGhzLWpzL3N0b2NrJylcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RvY2tMaW5lQ2hhcnQgZXh0ZW5kcyBMaW5lQ2hhcnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzLCBTdG9ja0xpbmUpXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0gICB7XG4gICAgb3B0aW9uczoge1xuICAgICAgd2lkdGg6IDYwMCxcbiAgICAgIGhlaWdodDogNjAwLFxuICAgICAgY29sb3I6ICcjMjk4MEI5JyxcbiAgICAgIG1hcmdpbjoge3RvcDogNDAsIGxlZnQ6IDYwLCBib3R0b206IDUwLCByaWdodDogMjB9LFxuICAgICAgYW5pbWF0ZToge1xuICAgICAgICB0eXBlOiAnZGVsYXllZCcsXG4gICAgICAgIGR1cmF0aW9uOiAyMDAsXG4gICAgICAgIGZpbGxUcmFuc2l0aW9uOjNcbiAgICAgIH0sXG4gICAgICBheGlzWDoge1xuICAgICAgICBzaG93QXhpczogdHJ1ZSxcbiAgICAgICAgc2hvd0xpbmVzOiB0cnVlLFxuICAgICAgICBzaG93TGFiZWxzOiB0cnVlLFxuICAgICAgICBzaG93VGlja3M6IHRydWUsXG4gICAgICAgIHplcm9BeGlzOiBmYWxzZSxcbiAgICAgICAgb3JpZW50OiAnYm90dG9tJyxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICBmb250RmFtaWx5OiAnQXJpYWwnLFxuICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICBib2xkOiB0cnVlLFxuICAgICAgICAgIGNvbG9yOiAnIzM0NDk1RSdcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGF4aXNZOiB7XG4gICAgICAgIHNob3dBeGlzOiB0cnVlLFxuICAgICAgICBzaG93TGluZXM6IHRydWUsXG4gICAgICAgIHNob3dMYWJlbHM6IHRydWUsXG4gICAgICAgIHNob3dUaWNrczogdHJ1ZSxcbiAgICAgICAgemVyb0F4aXM6IGZhbHNlLFxuICAgICAgICBvcmllbnQ6ICdsZWZ0JyxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICBmb250RmFtaWx5OiAnQXJpYWwnLFxuICAgICAgICAgIGZvbnRTaXplOiAxNCxcbiAgICAgICAgICBib2xkOiB0cnVlLFxuICAgICAgICAgIGNvbG9yOiAnIzM0NDk1RSdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19