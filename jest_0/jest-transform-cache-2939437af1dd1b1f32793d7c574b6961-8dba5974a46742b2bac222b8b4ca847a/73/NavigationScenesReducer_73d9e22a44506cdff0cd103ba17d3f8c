d507a8b07405087a15ee4bbaf844ff40











'use strict';

var invariant=require('fbjs/lib/invariant');






var SCENE_KEY_PREFIX='scene_';




function compareKey(one,two){
var delta=one.length-two.length;
if(delta>0){
return 1;
}
if(delta<0){
return-1;
}
return one>two?1:-1;
}




function compareScenes(
one,
two)
{
if(one.index>two.index){
return 1;
}
if(one.index<two.index){
return-1;
}

return compareKey(
one.key,
two.key);

}

function areScenesShallowEqual(
one,
two)
{
return(
one.key===two.key&&
one.index===two.index&&
one.isStale===two.isStale&&
one.navigationState===two.navigationState&&
one.navigationState.key===two.navigationState.key);

}

function NavigationScenesReducer(
scenes,
nextState,
prevState)
{

var prevScenes=new Map();
var freshScenes=new Map();
var staleScenes=new Map();


scenes.forEach(function(scene){var
key=scene.key;
if(scene.isStale){
staleScenes.set(key,scene);
}
prevScenes.set(key,scene);
});

var nextKeys=new Set();
nextState.children.forEach(function(navigationState,index){
var key=SCENE_KEY_PREFIX+navigationState.key;
var scene={
index:index,
isStale:false,
key:key,
navigationState:navigationState};

invariant(
!nextKeys.has(key),
'navigationState.children['+index+'].key "'+key+'" conflicts with'+
'another child!');

nextKeys.add(key);

if(staleScenes.has(key)){


staleScenes.delete(key);
}
freshScenes.set(key,scene);
});

if(prevState){

prevState.children.forEach(function(navigationState,index){
var key=SCENE_KEY_PREFIX+navigationState.key;
if(freshScenes.has(key)){
return;
}
staleScenes.set(key,{
index:index,
isStale:true,
key:key,
navigationState:navigationState});

});
}

var nextScenes=[];

var mergeScene=function mergeScene(nextScene){var
key=nextScene.key;
var prevScene=prevScenes.has(key)?prevScenes.get(key):null;
if(prevScene&&areScenesShallowEqual(prevScene,nextScene)){


nextScenes.push(prevScene);
}else{
nextScenes.push(nextScene);
}
};

staleScenes.forEach(mergeScene);
freshScenes.forEach(mergeScene);

return nextScenes.sort(compareScenes);
}

module.exports=NavigationScenesReducer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdmlnYXRpb25TY2VuZXNSZWR1Y2VyLmpzIl0sIm5hbWVzIjpbImludmFyaWFudCIsInJlcXVpcmUiLCJTQ0VORV9LRVlfUFJFRklYIiwiY29tcGFyZUtleSIsIm9uZSIsInR3byIsImRlbHRhIiwibGVuZ3RoIiwiY29tcGFyZVNjZW5lcyIsImluZGV4Iiwia2V5IiwiYXJlU2NlbmVzU2hhbGxvd0VxdWFsIiwiaXNTdGFsZSIsIm5hdmlnYXRpb25TdGF0ZSIsIk5hdmlnYXRpb25TY2VuZXNSZWR1Y2VyIiwic2NlbmVzIiwibmV4dFN0YXRlIiwicHJldlN0YXRlIiwicHJldlNjZW5lcyIsIk1hcCIsImZyZXNoU2NlbmVzIiwic3RhbGVTY2VuZXMiLCJmb3JFYWNoIiwic2NlbmUiLCJzZXQiLCJuZXh0S2V5cyIsIlNldCIsImNoaWxkcmVuIiwiaGFzIiwiYWRkIiwiZGVsZXRlIiwibmV4dFNjZW5lcyIsIm1lcmdlU2NlbmUiLCJuZXh0U2NlbmUiLCJwcmV2U2NlbmUiLCJnZXQiLCJwdXNoIiwic29ydCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBV0E7O0FBRUEsR0FBTUEsV0FBWUMsUUFBUSxvQkFBUixDQUFsQjs7Ozs7OztBQU9BLEdBQU1DLGtCQUFtQixRQUF6Qjs7Ozs7QUFLQSxRQUFTQyxXQUFULENBQW9CQyxHQUFwQixDQUFpQ0MsR0FBakMsQ0FBc0Q7QUFDcEQsR0FBSUMsT0FBUUYsSUFBSUcsTUFBSixDQUFhRixJQUFJRSxNQUE3QjtBQUNBLEdBQUlELE1BQVEsQ0FBWixDQUFlO0FBQ2IsTUFBTyxFQUFQO0FBQ0Q7QUFDRCxHQUFJQSxNQUFRLENBQVosQ0FBZTtBQUNiLE1BQU8sQ0FBQyxDQUFSO0FBQ0Q7QUFDRCxNQUFPRixLQUFNQyxHQUFOLENBQVksQ0FBWixDQUFnQixDQUFDLENBQXhCO0FBQ0Q7Ozs7O0FBS0QsUUFBU0csY0FBVDtBQUNFSixHQURGO0FBRUVDLEdBRkY7QUFHVTtBQUNSLEdBQUlELElB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QWpDLENBQWpCLENBQThEOzs7QUFHNURGLFdBQVdLLElBQVgsQ0FBZ0JGLFNBQWhCO0FBQ0QsQ0FKRCxJQUlPO0FBQ0xILFdBQVdLLElBQVgsQ0FBZ0JILFNBQWhCO0FBQ0Q7QUFDRixDQVZEOztBQVlBWixZQUFZQyxPQUFaLENBQW9CVSxVQUFwQjtBQUNBWixZQUFZRSxPQUFaLENBQW9CVSxVQUFwQjs7QUFFQSxNQUFPRCxZQUFXTSxJQUFYLENBQWdCN0IsYUFBaEIsQ0FBUDtBQUNEOztBQUVEOEIsT0FBT0MsT0FBUCxDQUFpQnpCLHVCQUFqQiIsImZpbGUiOiJOYXZpZ2F0aW9uU2NlbmVzUmVkdWNlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgTmF2aWdhdGlvblNjZW5lc1JlZHVjZXJcbiAqIEBmbG93XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG5cbmltcG9ydCB0eXBlIHtcbiAgTmF2aWdhdGlvblBhcmVudFN0YXRlLFxuICBOYXZpZ2F0aW9uU2NlbmUsXG59IGZyb20gJ05hdmlnYXRpb25UeXBlRGVmaW5pdGlvbic7XG5cbmNvbnN0IFNDRU5FX0tFWV9QUkVGSVggPSAnc2NlbmVfJztcblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gY29tcGFyZSByb3V0ZSBrZXlzIChlLmcuIFwiOVwiLCBcIjExXCIpLlxuICovXG5mdW5jdGlvbiBjb21wYXJlS2V5KG9uZTogc3RyaW5nLCB0d286IHN0cmluZyk6IG51bWJlciB7XG4gIHZhciBkZWx0YSA9IG9uZS5sZW5ndGggLSB0d28ubGVuZ3RoO1xuICBpZiAoZGVsdGEgPiAwKSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cbiAgaWYgKGRlbHRhIDwgMCkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICByZXR1cm4gb25lID4gdHdvID8gMSA6IC0xO1xufVxuXG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBzb3J0IHNjZW5lcyBiYXNlZCBvbiB0aGVpciBpbmRleCBhbmQgdmlldyBrZXkuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVTY2VuZXMoXG4gIG9uZTogTmF2aWdhdGlvblNjZW5lLFxuICB0d286IE5hdmlnYXRpb25TY2VuZSxcbik6IG51bWJlciB7XG4gIGlmIChvbmUuaW5kZXggPiB0d28uaW5kZXgpIHtcbiAgICByZXR1cm4gMTtcbiAgfVxuICBpZiAob25lLmluZGV4IDwgdHdvLmluZGV4KSB7XG4gICAgcmV0dXJuIC0xO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBhcmVLZXkoXG4gICAgb25lLmtleSxcbiAgICB0d28ua2V5LFxuICApO1xufVxuXG5mdW5jdGlvbiBhcmVTY2VuZXNTaGFsbG93RXF1YWwoXG4gIG9uZTogTmF2aWdhdGlvblNjZW5lLFxuICB0d286IE5hdmlnYXRpb25TY2VuZSxcbik6IGJvb2xlYW4ge1xuICByZXR1cm4gKFxuICAgIG9uZS5rZXkgPT09IHR3by5rZXkgJiZcbiAgICBvbmUuaW5kZXggPT09IHR3by5pbmRleCAmJlxuICAgIG9uZS5pc1N0YWxlID09PSB0d28uaXNTdGFsZSAmJlxuICAgIG9uZS5uYXZpZ2F0aW9uU3RhdGUgPT09IHR3by5uYXZpZ2F0aW9uU3RhdGUgJiZcbiAgICBvbmUubmF2aWdhdGlvblN0YXRlLmtleSA9PT0gdHdvLm5hdmlnYXRpb25TdGF0ZS5rZXlcbiAgKTtcbn1cblxuZnVuY3Rpb24gTmF2aWdhdGlvblNjZW5lc1JlZHVjZXIoXG4gIHNjZW5lczogQXJyYXk8TmF2aWdhdGlvblNjZW5lPixcbiAgbmV4dFN0YXRlOiBOYXZpZ2F0aW9uUGFyZW50U3RhdGUsXG4gIHByZXZTdGF0ZTogP05hdmlnYXRpb25QYXJlbnRTdGF0ZSxcbik6IEFycmF5PE5hdmlnYXRpb25TY2VuZT4ge1xuXG4gIGNvbnN0IHByZXZTY2VuZXMgPSBuZXcgTWFwKCk7XG4gIGNvbnN0IGZyZXNoU2NlbmVzID0gbmV3IE1hcCgpO1xuICBjb25zdCBzdGFsZVNjZW5lcyA9IG5ldyBNYXAoKTtcblxuICAvLyBQb3B1bGF0ZSBzdGFsZSBzY2VuZXMgZnJvbSBwcmV2aW91cyBzY2VuZXMgbWFya2VkIGFzIHN0YWxlLlxuICBzY2VuZXMuZm9yRWFjaChzY2VuZSA9PiB7XG4gICAgY29uc3Qge2tleX0gPSBzY2VuZTtcbiAgICBpZiAoc2NlbmUuaXNTdGFsZSkge1xuICAgICAgc3RhbGVTY2VuZXMuc2V0KGtleSwgc2NlbmUpO1xuICAgIH1cbiAgICBwcmV2U2NlbmVzLnNldChrZXksIHNjZW5lKTtcbiAgfSk7XG5cbiAgY29uc3QgbmV4dEtleXMgPSBuZXcgU2V0KCk7XG4gIG5leHRTdGF0ZS5jaGlsZHJlbi5mb3JFYWNoKChuYXZpZ2F0aW9uU3RhdGUsIGluZGV4KSA9PiB7XG4gICAgY29uc3Qga2V5ID0gU0NFTkVfS0VZX1BSRUZJWCArIG5hdmlnYXRpb25TdGF0ZS5rZXk7XG4gICAgY29uc3Qgc2NlbmUgPSB7XG4gICAgICBpbmRleCxcbiAgICAgIGlzU3RhbGU6IGZhbHNlLFxuICAgICAga2V5LFxuICAgICAgbmF2aWdhdGlvblN0YXRlLFxuICAgIH07XG4gICAgaW52YXJpYW50KFxuICAgICAgIW5leHRLZXlzLmhhcyhrZXkpLFxuICAgICAgYG5hdmlnYXRpb25TdGF0ZS5jaGlsZHJlblske2luZGV4fV0ua2V5IFwiJHtrZXl9XCIgY29uZmxpY3RzIHdpdGhgICtcbiAgICAgICAgJ2Fub3RoZXIgY2hpbGQhJ1xuICAgICk7XG4gICAgbmV4dEtleXMuYWRkKGtleSk7XG5cbiAgICBpZiAoc3RhbGVTY2VuZXMuaGFzKGtleSkpIHtcbiAgICAgIC8vIEEgcHJldmlvdXNseSBgc3RhbGVgIHNjZW5lIGlzIG5vdyBwYXJ0IG9mIHRoZSBuZXh0U3RhdGUsIHNvIHdlXG4gICAgICAvLyByZXZpdmUgaXQgYnkgcmVtb3ZpbmcgaXQgZnJvbSB0aGUgc3RhbGUgc2NlbmUgbWFwLlxuICAgICAgc3RhbGVTY2VuZXMuZGVsZXRlKGtleSk7XG4gICAgfVxuICAgIGZyZXNoU2NlbmVzLnNldChrZXksIHNjZW5lKTtcbiAgfSk7XG5cbiAgaWYgKHByZXZTdGF0ZSkge1xuICAgIC8vIExvb2sgYXQgdGhlIHByZXZpb3VzIGNoaWxkcmVuIGFuZCBjbGFzc2lmeSBhbnkgcmVtb3ZlZCBzY2VuZXMgYXMgYHN0YWxlYC5cbiAgICBwcmV2U3RhdGUuY2hpbGRyZW4uZm9yRWFjaCgobmF2aWdhdGlvblN0YXRlLCBpbmRleCkgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gU0NFTkVfS0VZX1BSRUZJWCArIG5hdmlnYXRpb25TdGF0ZS5rZXk7XG4gICAgICBpZiAoZnJlc2hTY2VuZXMuaGFzKGtleSkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc3RhbGVTY2VuZXMuc2V0KGtleSwge1xuICAgICAgICBpbmRleCxcbiAgICAgICAgaXNTdGFsZTogdHJ1ZSxcbiAgICAgICAga2V5LFxuICAgICAgICBuYXZpZ2F0aW9uU3RhdGUsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0IG5leHRTY2VuZXMgPSBbXTtcblxuICBjb25zdCBtZXJnZVNjZW5lID0gKG5leHRTY2VuZSA9PiB7XG4gICAgY29uc3Qge2tleX0gPSBuZXh0U2NlbmU7XG4gICAgY29uc3QgcHJldlNjZW5lID0gcHJldlNjZW5lcy5oYXMoa2V5KSA/IHByZXZTY2VuZXMuZ2V0KGtleSkgOiBudWxsO1xuICAgIGlmIChwcmV2U2NlbmUgJiYgYXJlU2NlbmVzU2hhbGxvd0VxdWFsKHByZXZTY2VuZSwgbmV4dFNjZW5lKSkge1xuICAgICAgLy8gUmV1c2UgYHByZXZTY2VuZWAgYXMgYHNjZW5lYCBzbyB2aWV3IGNhbiBhdm9pZCB1bm5lY2Vzc2FyeSByZS1yZW5kZXIuXG4gICAgICAvLyBUaGlzIGFzc3VtZXMgdGhhdCB0aGUgc2NlbmUncyBuYXZpZ2F0aW9uIHN0YXRlIGlzIGltbXV0YWJsZS5cbiAgICAgIG5leHRTY2VuZXMucHVzaChwcmV2U2NlbmUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXh0U2NlbmVzLnB1c2gobmV4dFNjZW5lKTtcbiAgICB9XG4gIH0pO1xuXG4gIHN0YWxlU2NlbmVzLmZvckVhY2gobWVyZ2VTY2VuZSk7XG4gIGZyZXNoU2NlbmVzLmZvckVhY2gobWVyZ2VTY2VuZSk7XG5cbiAgcmV0dXJuIG5leHRTY2VuZXMuc29ydChjb21wYXJlU2NlbmVzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBOYXZpZ2F0aW9uU2NlbmVzUmVkdWNlcjtcbiJdfQ==