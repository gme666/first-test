81d6dfd08fd939845c36d2a501272fbe
Object.defineProperty(exports,"__esModule",{value:true});exports.loginUser=exports.passwordChanged=exports.emailChanged=undefined;var _firebase=require('firebase');var _firebase2=_interopRequireDefault(_firebase);
var _reactNativeRouterFlux=require('react-native-router-flux');
var _types=require('./types');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}







var emailChanged=exports.emailChanged=function emailChanged(text){
return{
type:_types.EMAIL_CHANGED,
payload:text};

};

var passwordChanged=exports.passwordChanged=function passwordChanged(text){
return{
type:_types.PASSWORD_CHANGED,
payload:text};

};

var loginUser=exports.loginUser=function loginUser(_ref){var email=_ref.email,password=_ref.password;
return function(dispatch){
dispatch({type:_types.LOGIN_USER});

_firebase2.default.auth().signInWithEmailAndPassword(email,password).
then(function(user){return loginUserSuccess(dispatch,user);}).
catch(function(){
_firebase2.default.auth().createUserWithEmailAndPassword(email,password).
then(function(user){return loginUserSuccess(dispatch,user);}).
catch(function(){return loginUserFail(dispatch);});
});
};
};

var loginUserFail=function loginUserFail(dispatch){
dispatch({
type:_types.LOGIN_USER_FAIL});

};

var loginUserSuccess=function loginUserSuccess(dispatch,user){
dispatch({
type:_types.LOGIN_USER_SUCCESS,
payload:user});


_reactNativeRouterFlux.Actions.main();
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dGhBY3Rpb25zLmpzIl0sIm5hbWVzIjpbImVtYWlsQ2hhbmdlZCIsInR5cGUiLCJwYXlsb2FkIiwidGV4dCIsInBhc3N3b3JkQ2hhbmdlZCIsImxvZ2luVXNlciIsImVtYWlsIiwicGFzc3dvcmQiLCJkaXNwYXRjaCIsImF1dGgiLCJzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCIsInRoZW4iLCJsb2dpblVzZXJTdWNjZXNzIiwidXNlciIsImNhdGNoIiwiY3JlYXRlVXNlcldpdGhFbWFpbEFuZFBhc3N3b3JkIiwibG9naW5Vc2VyRmFpbCIsIm1haW4iXSwibWFwcGluZ3MiOiJrSUFBQSxrQztBQUNBO0FBQ0EsOEI7Ozs7Ozs7O0FBUU8sR0FBTUEsbUNBQWUsUUFBZkEsYUFBZSxNQUFRO0FBQ2xDLE1BQU87QUFDTEMseUJBREs7QUFFTEMsUUFBU0MsSUFGSixDQUFQOztBQUlELENBTE07O0FBT0EsR0FBTUMseUNBQWtCLFFBQWxCQSxnQkFBa0IsTUFBUTtBQUNyQyxNQUFPO0FBQ0xILDRCQURLO0FBRUxDLFFBQVNDLElBRkosQ0FBUDs7QUFJRCxDQUxNOztBQU9BLEdBQU1FLDZCQUFZLFFBQVpBLFVBQVksTUFBeUIsSUFBdEJDLE1BQXNCLE1BQXRCQSxLQUFzQixDQUFmQyxRQUFlLE1BQWZBLFFBQWU7QUFDaEQsTUFBTyxVQUFDQyxRQUFELENBQWM7QUFDbkJBLFNBQVMsQ0FBRVAsc0JBQUYsQ0FBVDs7QUFFQSxtQkFBU1EsSUFBVCxHQUFnQkMsMEJBQWhCLENBQTJDSixLQUEzQyxDQUFrREMsUUFBbEQ7QUFDR0ksSUFESCxDQUNRLHFCQUFRQyxrQkFBaUJKLFFBQWpCLENBQTJCSyxJQUEzQixDQUFSLEVBRFI7QUFFR0MsS0FGSCxDQUVTLFVBQU07QUFDWCxtQkFBU0wsSUFBVCxHQUFnQk0sOEJBQWhCLENBQStDVCxLQUEvQyxDQUFzREMsUUFBdEQ7QUFDR0ksSUFESCxDQUNRLHFCQUFRQyxrQkFBaUJKLFFBQWpCLENBQTJCSyxJQUEzQixDQUFSLEVBRFI7QUFFR0MsS0FGSCxDQUVTLGlCQUFNRSxlQUFjUixRQUFkLENBQU4sRUFGVDtBQUdELENBTkg7QUFPRCxDQVZEO0FBV0QsQ0FaTTs7QUFjUCxHQUFNUSxlQUFnQixRQUFoQkEsY0FBZ0IsQ0FBQ1IsUUFBRCxDQUFjO0FBQ2xDQSxTQUFTO0FBQ1BQLDJCQURPLENBQVQ7O0FBR0QsQ0FKRDs7QUFNQSxHQUFNVyxrQkFBbUIsUUFBbkJBLGlCQUFtQixDQUFDSixRQUFELENBQVdLLElBQVgsQ0FBb0I7QUFDM0NMLFNBQVM7QUFDUFAsOEJBRE87QUFFUEMsUUFBU1csSUFGRixDQUFUOzs7QUFLQSwrQkFBUUksSUFBUjtBQUNELENBUEQiLCJmaWxlIjoiQXV0aEFjdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UnO1xuaW1wb3J0IHsgQWN0aW9ucyB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1yb3V0ZXItZmx1eCc7XG5pbXBvcnQge1xuICBFTUFJTF9DSEFOR0VELFxuICBQQVNTV09SRF9DSEFOR0VELFxuICBMT0dJTl9VU0VSX1NVQ0NFU1MsXG4gIExPR0lOX1VTRVJfRkFJTCxcbiAgTE9HSU5fVVNFUlxufSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGVtYWlsQ2hhbmdlZCA9IHRleHQgPT4ge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IEVNQUlMX0NIQU5HRUQsXG4gICAgcGF5bG9hZDogdGV4dFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IHBhc3N3b3JkQ2hhbmdlZCA9IHRleHQgPT4ge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFBBU1NXT1JEX0NIQU5HRUQsXG4gICAgcGF5bG9hZDogdGV4dFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGxvZ2luVXNlciA9ICh7IGVtYWlsLCBwYXNzd29yZCB9KSA9PiB7XG4gIHJldHVybiAoZGlzcGF0Y2gpID0+IHtcbiAgICBkaXNwYXRjaCh7IHR5cGU6IExPR0lOX1VTRVIgfSk7XG5cbiAgICBmaXJlYmFzZS5hdXRoKCkuc2lnbkluV2l0aEVtYWlsQW5kUGFzc3dvcmQoZW1haWwsIHBhc3N3b3JkKVxuICAgICAgLnRoZW4odXNlciA9PiBsb2dpblVzZXJTdWNjZXNzKGRpc3BhdGNoLCB1c2VyKSlcbiAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgIGZpcmViYXNlLmF1dGgoKS5jcmVhdGVVc2VyV2l0aEVtYWlsQW5kUGFzc3dvcmQoZW1haWwsIHBhc3N3b3JkKVxuICAgICAgICAgIC50aGVuKHVzZXIgPT4gbG9naW5Vc2VyU3VjY2VzcyhkaXNwYXRjaCwgdXNlcikpXG4gICAgICAgICAgLmNhdGNoKCgpID0+IGxvZ2luVXNlckZhaWwoZGlzcGF0Y2gpKTtcbiAgICAgIH0pO1xuICB9O1xufTtcblxuY29uc3QgbG9naW5Vc2VyRmFpbCA9IChkaXNwYXRjaCkgPT4ge1xuICBkaXNwYXRjaCh7XG4gICAgdHlwZTogTE9HSU5fVVNFUl9GQUlMXG4gIH0pO1xufTtcblxuY29uc3QgbG9naW5Vc2VyU3VjY2VzcyA9IChkaXNwYXRjaCwgdXNlcikgPT4ge1xuICBkaXNwYXRjaCh7XG4gICAgdHlwZTogTE9HSU5fVVNFUl9TVUNDRVNTLFxuICAgIHBheWxvYWQ6IHVzZXJcbiAgfSk7XG5cbiAgQWN0aW9ucy5tYWluKCk7XG59O1xuIl19