59715b2415a4d56cfd676eb1576a230a
Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);
var _reactNative=require('react-native');




var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);

var _style=require('./style');var _style2=_interopRequireDefault(_style);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var

Day=function(_Component){_inherits(Day,_Component);












function Day(props){_classCallCheck(this,Day);var _this=_possibleConstructorReturn(this,(Day.__proto__||Object.getPrototypeOf(Day)).call(this,
props));
_this.style=(0,_style2.default)(props.theme);
_this.onDayPress=_this.onDayPress.bind(_this);return _this;
}_createClass(Day,[{key:'onDayPress',value:function onDayPress()

{
this.props.onPress(this.props.day);
}},{key:'shouldComponentUpdate',value:function shouldComponentUpdate(

nextProps){var _this2=this;
return['state','children','marked','onPress','markingExists'].reduce(function(prev,next){
if(prev||nextProps[next]!==_this2.props[next]){
return true;
}
return prev;
},false);
}},{key:'render',value:function render()

{
var containerStyle=[this.style.base];
var textStyle=[this.style.text];
var dotStyle=[this.style.dot];

var marked=this.props.marked||{};
if(marked&&marked.constructor===Array&&marked.length){
marked={
marked:true};

}
var dot=void 0;
if(marked.marked){
dotStyle.push(this.style.visibleDot);
dot=_react2.default.createElement(_reactNative.View,{style:dotStyle});
}else if(!this.props.markingExists){
textStyle.push(this.style.alignedText);
}

if(this.props.state==='selected'||marked.selected){
containerStyle.push(this.style.selected);
dotStyle.push(this.style.selectedDot);
textStyle.push(this.style.selectedText);
}else if(this.props.state==='disabled'||marked.disabled){
textStyle.push(this.style.disabledText);
}else if(this.props.state==='today'){
textStyle.push(this.style.todayText);
}
return(
_react2.default.createElement(_reactNative.TouchableOpacity,{style:containerStyle,onPress:this.onDayPress},
_react2.default.createElement(_reactNative.Text,{style:textStyle},String(this.props.children)),
dot));


}}]);return Day;}(_react.Component);Day.propTypes={state:_propTypes2.default.oneOf(['selected','disabled','today','']),theme:_propTypes2.default.object,marked:_propTypes2.default.any,onPress:_propTypes2.default.func,day:_propTypes2.default.object,markingExists:_propTypes2.default.bool};exports.default=


Day;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkRheSIsInByb3BzIiwic3R5bGUiLCJ0aGVtZSIsIm9uRGF5UHJlc3MiLCJiaW5kIiwib25QcmVzcyIsImRheSIsIm5leHRQcm9wcyIsInJlZHVjZSIsInByZXYiLCJuZXh0IiwiY29udGFpbmVyU3R5bGUiLCJiYXNlIiwidGV4dFN0eWxlIiwidGV4dCIsImRvdFN0eWxlIiwiZG90IiwibWFya2VkIiwiY29uc3RydWN0b3IiLCJBcnJheSIsImxlbmd0aCIsInB1c2giLCJ2aXNpYmxlRG90IiwibWFya2luZ0V4aXN0cyIsImFsaWduZWRUZXh0Iiwic3RhdGUiLCJzZWxlY3RlZCIsInNlbGVjdGVkRG90Iiwic2VsZWN0ZWRUZXh0IiwiZGlzYWJsZWQiLCJkaXNhYmxlZFRleHQiLCJ0b2RheVRleHQiLCJTdHJpbmciLCJjaGlsZHJlbiIsInByb3BUeXBlcyIsIm9uZU9mIiwib2JqZWN0IiwiYW55IiwiZnVuYyIsImJvb2wiXSwibWFwcGluZ3MiOiJ1akJBQUEsNEI7QUFDQTs7Ozs7QUFLQSxxQzs7QUFFQSw4Qjs7QUFFTUEsRzs7Ozs7Ozs7Ozs7OztBQWFKLGFBQVlDLEtBQVosQ0FBbUI7QUFDWEEsS0FEVztBQUVqQixNQUFLQyxLQUFMLENBQWEsb0JBQWlCRCxNQUFNRSxLQUF2QixDQUFiO0FBQ0EsTUFBS0MsVUFBTCxDQUFrQixNQUFLQSxVQUFMLENBQWdCQyxJQUFoQixPQUFsQixDQUhpQjtBQUlsQixDOztBQUVZO0FBQ1gsS0FBS0osS0FBTCxDQUFXSyxPQUFYLENBQW1CLEtBQUtMLEtBQUwsQ0FBV00sR0FBOUI7QUFDRCxDOztBQUVxQkMsUyxDQUFXO0FBQy9CLE1BQU8sQ0FBQyxPQUFELENBQVUsVUFBVixDQUFzQixRQUF0QixDQUFnQyxTQUFoQyxDQUEyQyxlQUEzQyxFQUE0REMsTUFBNUQsQ0FBbUUsU0FBQ0MsSUFBRCxDQUFPQyxJQUFQLENBQWdCO0FBQ3hGLEdBQUlELE1BQVFGLFVBQVVHLElBQVYsSUFBb0IsT0FBS1YsS0FBTCxDQUFXVSxJQUFYLENBQWhDLENBQWtEO0FBQ2hELE1BQU8sS0FBUDtBQUNEO0FBQ0QsTUFBT0QsS0FBUDtBQUNELENBTE0sQ0FLSixLQUxJLENBQVA7QUFNRCxDOztBQUVRO0FBQ1AsR0FBTUUsZ0JBQWlCLENBQUMsS0FBS1YsS0FBTCxDQUFXVyxJQUFaLENBQXZCO0FBQ0EsR0FBTUMsV0FBWSxDQUFDLEtBQUtaLEtBQUwsQ0FBV2EsSUFBWixDQUFsQjtBQUNBLEdBQU1DLFVBQVcsQ0FBQyxLQUFLZCxLQUFMLENBQVdlLEdBQVosQ0FBakI7O0FBRUEsR0FBSUMsUUFBUyxLQUFLakIsS0FBTCxDQUFXaUIsTUFBWCxFQUFxQixFQUFsQztBQUNBLEdBQUlBLFFBQVVBLE9BQU9DLFdBQVAsR0FBdUJDLEtBQWpDLEVBQTBDRixPQUFPRyxNQUFyRCxDQUE2RDtBQUMzREgsT0FBUztBQUNQQSxPQUFRLElBREQsQ0FBVDs7QUFHRDtBQUNELEdBQUlELFdBQUo7QUFDQSxHQUFJQyxPQUFPQSxNQUFYLENBQW1CO0FBQ2pCRixTQUFTTSxJQUFULENBQWMsS0FBS3BCLEtBQUwsQ0FBV3FCLFVBQXpCO0FBQ0FOLElBQU8saURBQU0sTUFBT0QsUUFBYixFQUFQO0FBQ0QsQ0FIRCxJQUdPLElBQUksQ0FBQyxLQUFLZixLQUFMLENBQVd1QixhQUFoQixDQUErQjtBQUNwQ1YsVUFBVVEsSUFBVixDQUFlLEtBQUtwQixLQUFMLENBQVd1QixXQUExQjtBQUNEOztBQUVELEdBQUksS0FBS3hCLEtBQUwsQ0FBV3lCLEtBQVgsR0FBcUIsVUFBckIsRUFBbUNSLE9BQU9TLFFBQTlDLENBQXdEO0FBQ3REZixlQUFlVSxJQUFmLENBQW9CLEtBQUtwQixLQUFMLENBQVd5QixRQUEvQjtBQUNBWCxTQUFTTSxJQUFULENBQWMsS0FBS3BCLEtBQUwsQ0FBVzBCLFdBQXpCO0FBQ0FkLFVBQVVRLElBQVYsQ0FBZSxLQUFLcEIsS0FBTCxDQUFXMkIsWUFBMUI7QUFDRCxDQUpELElBSU8sSUFBSSxLQUFLNUIsS0FBTCxDQUFXeUIsS0FBWCxHQUFxQixVQUFyQixFQUFtQ1IsT0FBT1ksUUFBOUMsQ0FBd0Q7QUFDN0RoQixVQUFVUSxJQUFWLENBQWUsS0FBS3BCLEtBQUwsQ0FBVzZCLFlBQTFCO0FBQ0QsQ0FGTSxJQUVBLElBQUksS0FBSzlCLEtBQUwsQ0FBV3lCLEtBQVgsR0FBcUIsT0FBekIsQ0FBa0M7QUFDdkNaLFVBQVVRLElBQVYsQ0FBZSxLQUFLcEIsS0FBTCxDQUFXOEIsU0FBMUI7QUFDRDtBQUNEO0FBQ0UsNkRBQWtCLE1BQU9wQixjQUF6QixDQUF5QyxRQUFTLEtBQUtSLFVBQXZEO0FBQ0UsaURBQU0sTUFBT1UsU0FBYixFQUF5Qm1CLE9BQU8sS0FBS2hDLEtBQUwsQ0FBV2lDLFFBQWxCLENBQXpCLENBREY7QUFFR2pCLEdBRkgsQ0FERjs7O0FBTUQsQyxtQ0FsRUdqQixHLENBQ0dtQyxTLENBQVksQ0FFakJULE1BQU8sb0JBQVVVLEtBQVYsQ0FBZ0IsQ0FBQyxVQUFELENBQWEsVUFBYixDQUF5QixPQUF6QixDQUFrQyxFQUFsQyxDQUFoQixDQUZVLENBS2pCakMsTUFBTyxvQkFBVWtDLE1BTEEsQ0FNakJuQixPQUFRLG9CQUFVb0IsR0FORCxDQU9qQmhDLFFBQVMsb0JBQVVpQyxJQVBGLENBUWpCaEMsSUFBSyxvQkFBVThCLE1BUkUsQ0FTakJiLGNBQWUsb0JBQVVnQixJQVRSLEM7OztBQW9FTnhDLEciLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIFRvdWNoYWJsZU9wYWNpdHksXG4gIFRleHQsXG4gIFZpZXdcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBzdHlsZUNvbnN0cnVjdG9yIGZyb20gJy4vc3R5bGUnO1xuXG5jbGFzcyBEYXkgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8vIFRPRE86IHNlbGVjdGVkICsgZGlzYWJsZWQgcHJvcHMgc2hvdWxkIGJlIHJlbW92ZWRcbiAgICBzdGF0ZTogUHJvcFR5cGVzLm9uZU9mKFsnc2VsZWN0ZWQnLCAnZGlzYWJsZWQnLCAndG9kYXknLCAnJ10pLFxuXG4gICAgLy8gU3BlY2lmeSB0aGVtZSBwcm9wZXJ0aWVzIHRvIG92ZXJyaWRlIHNwZWNpZmljIHN0eWxlcyBmb3IgY2FsZW5kYXIgcGFydHMuIERlZmF1bHQgPSB7fVxuICAgIHRoZW1lOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIG1hcmtlZDogUHJvcFR5cGVzLmFueSxcbiAgICBvblByZXNzOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBkYXk6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbWFya2luZ0V4aXN0czogUHJvcFR5cGVzLmJvb2wsXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdHlsZSA9IHN0eWxlQ29uc3RydWN0b3IocHJvcHMudGhlbWUpO1xuICAgIHRoaXMub25EYXlQcmVzcyA9IHRoaXMub25EYXlQcmVzcy5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb25EYXlQcmVzcygpIHtcbiAgICB0aGlzLnByb3BzLm9uUHJlc3ModGhpcy5wcm9wcy5kYXkpO1xuICB9XG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcykge1xuICAgIHJldHVybiBbJ3N0YXRlJywgJ2NoaWxkcmVuJywgJ21hcmtlZCcsICdvblByZXNzJywgJ21hcmtpbmdFeGlzdHMnXS5yZWR1Y2UoKHByZXYsIG5leHQpID0+IHtcbiAgICAgIGlmIChwcmV2IHx8IG5leHRQcm9wc1tuZXh0XSAhPT0gdGhpcy5wcm9wc1tuZXh0XSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwcmV2O1xuICAgIH0sIGZhbHNlKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBjb250YWluZXJTdHlsZSA9IFt0aGlzLnN0eWxlLmJhc2VdO1xuICAgIGNvbnN0IHRleHRTdHlsZSA9IFt0aGlzLnN0eWxlLnRleHRdO1xuICAgIGNvbnN0IGRvdFN0eWxlID0gW3RoaXMuc3R5bGUuZG90XTtcblxuICAgIGxldCBtYXJrZWQgPSB0aGlzLnByb3BzLm1hcmtlZCB8fCB7fTtcbiAgICBpZiAobWFya2VkICYmIG1hcmtlZC5jb25zdHJ1Y3RvciA9PT0gQXJyYXkgJiYgbWFya2VkLmxlbmd0aCkge1xuICAgICAgbWFya2VkID0ge1xuICAgICAgICBtYXJrZWQ6IHRydWVcbiAgICAgIH07XG4gICAgfVxuICAgIGxldCBkb3Q7XG4gICAgaWYgKG1hcmtlZC5tYXJrZWQpIHtcbiAgICAgIGRvdFN0eWxlLnB1c2godGhpcy5zdHlsZS52aXNpYmxlRG90KTtcbiAgICAgIGRvdCA9ICg8VmlldyBzdHlsZT17ZG90U3R5bGV9Lz4pO1xuICAgIH0gZWxzZSBpZiAoIXRoaXMucHJvcHMubWFya2luZ0V4aXN0cykge1xuICAgICAgdGV4dFN0eWxlLnB1c2godGhpcy5zdHlsZS5hbGlnbmVkVGV4dCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMuc3RhdGUgPT09ICdzZWxlY3RlZCcgfHwgbWFya2VkLnNlbGVjdGVkKSB7XG4gICAgICBjb250YWluZXJTdHlsZS5wdXNoKHRoaXMuc3R5bGUuc2VsZWN0ZWQpO1xuICAgICAgZG90U3R5bGUucHVzaCh0aGlzLnN0eWxlLnNlbGVjdGVkRG90KTtcbiAgICAgIHRleHRTdHlsZS5wdXNoKHRoaXMuc3R5bGUuc2VsZWN0ZWRUZXh0KTtcbiAgICB9IGVsc2UgaWYgKHRoaXMucHJvcHMuc3RhdGUgPT09ICdkaXNhYmxlZCcgfHwgbWFya2VkLmRpc2FibGVkKSB7XG4gICAgICB0ZXh0U3R5bGUucHVzaCh0aGlzLnN0eWxlLmRpc2FibGVkVGV4dCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnN0YXRlID09PSAndG9kYXknKSB7XG4gICAgICB0ZXh0U3R5bGUucHVzaCh0aGlzLnN0eWxlLnRvZGF5VGV4dCk7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8VG91Y2hhYmxlT3BhY2l0eSBzdHlsZT17Y29udGFpbmVyU3R5bGV9IG9uUHJlc3M9e3RoaXMub25EYXlQcmVzc30+XG4gICAgICAgIDxUZXh0IHN0eWxlPXt0ZXh0U3R5bGV9PntTdHJpbmcodGhpcy5wcm9wcy5jaGlsZHJlbil9PC9UZXh0PlxuICAgICAgICB7ZG90fVxuICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRGF5O1xuIl19