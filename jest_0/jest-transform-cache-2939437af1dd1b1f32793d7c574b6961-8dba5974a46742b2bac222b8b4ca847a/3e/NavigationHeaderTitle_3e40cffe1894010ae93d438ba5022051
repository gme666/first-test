8038aa9fce8ee710caead6be92bd79eb



























'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};

var React=require('react');
var ReactNative=require('react-native');var


Platform=




ReactNative.Platform,StyleSheet=ReactNative.StyleSheet,View=ReactNative.View,Text=ReactNative.Text,ViewPropTypes=ReactNative.ViewPropTypes;








var NavigationHeaderTitle=function NavigationHeaderTitle(_ref){var children=_ref.children,style=_ref.style,textStyle=_ref.textStyle,viewProps=_ref.viewProps;return(
React.createElement(View,_extends({style:[styles.title,style]},viewProps),
React.createElement(Text,{style:[styles.titleText,textStyle]},children)));};



var styles=StyleSheet.create({
title:{
flex:1,
flexDirection:'row',
alignItems:'center',
marginHorizontal:16},


titleText:{
flex:1,
fontSize:18,
fontWeight:'500',
color:'rgba(0, 0, 0, .9)',
textAlign:Platform.OS==='ios'?'center':'left'}});



NavigationHeaderTitle.propTypes={
children:React.PropTypes.string.isRequired,
style:ViewPropTypes.style,
textStyle:Text.propTypes.style};


module.exports=NavigationHeaderTitle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdmlnYXRpb25IZWFkZXJUaXRsZS5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJSZWFjdE5hdGl2ZSIsIlBsYXRmb3JtIiwiU3R5bGVTaGVldCIsIlZpZXciLCJUZXh0IiwiVmlld1Byb3BUeXBlcyIsIk5hdmlnYXRpb25IZWFkZXJUaXRsZSIsImNoaWxkcmVuIiwic3R5bGUiLCJ0ZXh0U3R5bGUiLCJ2aWV3UHJvcHMiLCJzdHlsZXMiLCJ0aXRsZSIsInRpdGxlVGV4dCIsImNyZWF0ZSIsImZsZXgiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsIm1hcmdpbkhvcml6b250YWwiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJjb2xvciIsInRleHRBbGlnbiIsIk9TIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQSxhOztBQUVBLEdBQU1BLE9BQVFDLFFBQVEsT0FBUixDQUFkO0FBQ0EsR0FBTUMsYUFBY0QsUUFBUSxjQUFSLENBQXBCLEM7OztBQUdFRSxROzs7OztBQUtFRCxXLENBTEZDLFEsQ0FDQUMsVSxDQUlFRixXLENBSkZFLFUsQ0FDQUMsSSxDQUdFSCxXLENBSEZHLEksQ0FDQUMsSSxDQUVFSixXLENBRkZJLEksQ0FDQUMsYSxDQUNFTCxXLENBREZLLGE7Ozs7Ozs7OztBQVVGLEdBQU1DLHVCQUF3QixRQUF4QkEsc0JBQXdCLFVBQUdDLFNBQUgsTUFBR0EsUUFBSCxDQUFhQyxLQUFiLE1BQWFBLEtBQWIsQ0FBb0JDLFNBQXBCLE1BQW9CQSxTQUFwQixDQUErQkMsU0FBL0IsTUFBK0JBLFNBQS9CO0FBQzVCLG9CQUFDLElBQUQsV0FBTSxNQUFPLENBQUVDLE9BQU9DLEtBQVQsQ0FBZ0JKLEtBQWhCLENBQWIsRUFBMENFLFNBQTFDO0FBQ0Usb0JBQUMsSUFBRCxFQUFNLE1BQU8sQ0FBRUMsT0FBT0UsU0FBVCxDQUFvQkosU0FBcEIsQ0FBYixFQUErQ0YsUUFBL0MsQ0FERixDQUQ0QixHQUE5Qjs7OztBQU1BLEdBQU1JLFFBQVNULFdBQVdZLE1BQVgsQ0FBa0I7QUFDL0JGLE1BQU87QUFDTEcsS0FBTSxDQUREO0FBRUxDLGNBQWUsS0FGVjtBQUdMQyxXQUFZLFFBSFA7QUFJTEMsaUJBQWtCLEVBSmIsQ0FEd0I7OztBQVEvQkwsVUFBVztBQUNURSxLQUFNLENBREc7QUFFVEksU0FBVSxFQUZEO0FBR1RDLFdBQVksS0FISDtBQUlUQyxNQUFPLG1CQUpFO0FBS1RDLFVBQVdyQixTQUFTc0IsRUFBVCxHQUFnQixLQUFoQixDQUF3QixRQUF4QixDQUFtQyxNQUxyQyxDQVJvQixDQUFsQixDQUFmOzs7O0FBaUJBakIsc0JBQXNCa0IsU0FBdEIsQ0FBa0M7QUFDaENqQixTQUFVVCxNQUFNMkIsU0FBTixDQUFnQkMsTUFBaEIsQ0FBdUJDLFVBREQ7QUFFaENuQixNQUFPSCxjQUFjRyxLQUZXO0FBR2hDQyxVQUFXTCxLQUFLb0IsU0FBTCxDQUFlaEIsS0FITSxDQUFsQzs7O0FBTUFvQixPQUFPQyxPQUFQLENBQWlCdkIscUJBQWpCIiwiZmlsZSI6Ik5hdmlnYXRpb25IZWFkZXJUaXRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LCBGYWNlYm9vaywgSW5jLiAgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBGYWNlYm9vaywgSW5jLiAoXCJGYWNlYm9va1wiKSBvd25zIGFsbCByaWdodCwgdGl0bGUgYW5kIGludGVyZXN0LCBpbmNsdWRpbmdcbiAqIGFsbCBpbnRlbGxlY3R1YWwgcHJvcGVydHkgYW5kIG90aGVyIHByb3ByaWV0YXJ5IHJpZ2h0cywgaW4gYW5kIHRvIHRoZSBSZWFjdFxuICogTmF0aXZlIEN1c3RvbUNvbXBvbmVudHMgc29mdHdhcmUgKHRoZSBcIlNvZnR3YXJlXCIpLiAgU3ViamVjdCB0byB5b3VyXG4gKiBjb21wbGlhbmNlIHdpdGggdGhlc2UgdGVybXMsIHlvdSBhcmUgaGVyZWJ5IGdyYW50ZWQgYSBub24tZXhjbHVzaXZlLFxuICogd29ybGR3aWRlLCByb3lhbHR5LWZyZWUgY29weXJpZ2h0IGxpY2Vuc2UgdG8gKDEpIHVzZSBhbmQgY29weSB0aGUgU29mdHdhcmU7XG4gKiBhbmQgKDIpIHJlcHJvZHVjZSBhbmQgZGlzdHJpYnV0ZSB0aGUgU29mdHdhcmUgYXMgcGFydCBvZiB5b3VyIG93biBzb2Z0d2FyZVxuICogKFwiWW91ciBTb2Z0d2FyZVwiKS4gIEZhY2Vib29rIHJlc2VydmVzIGFsbCByaWdodHMgbm90IGV4cHJlc3NseSBncmFudGVkIHRvXG4gKiB5b3UgaW4gdGhpcyBsaWNlbnNlIGFncmVlbWVudC5cbiAqXG4gKiBUSEUgU09GVFdBUkUgQU5EIERPQ1VNRU5UQVRJT04sIElGIEFOWSwgQVJFIFBST1ZJREVEIFwiQVMgSVNcIiBBTkQgQU5ZIEVYUFJFU1NcbiAqIE9SIElNUExJRUQgV0FSUkFOVElFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVNcbiAqIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UpIEFSRSBESVNDTEFJTUVELlxuICogSU4gTk8gRVZFTlQgU0hBTEwgRkFDRUJPT0sgT1IgSVRTIEFGRklMSUFURVMsIE9GRklDRVJTLCBESVJFQ1RPUlMgT1JcbiAqIEVNUExPWUVFUyBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLFxuICogRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLFxuICogUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7XG4gKiBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSxcbiAqIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SXG4gKiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSEUgU09GVFdBUkUsIEVWRU4gSUZcbiAqIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBOYXZpZ2F0aW9uSGVhZGVyVGl0bGVcbiAqIEBmbG93XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgUmVhY3ROYXRpdmUgPSByZXF1aXJlKCdyZWFjdC1uYXRpdmUnKTtcblxuY29uc3Qge1xuICBQbGF0Zm9ybSxcbiAgU3R5bGVTaGVldCxcbiAgVmlldyxcbiAgVGV4dCxcbiAgVmlld1Byb3BUeXBlcyxcbn0gPSBSZWFjdE5hdGl2ZTtcblxudHlwZSBQcm9wcyA9IHtcbiAgY2hpbGRyZW46IFJlYWN0RWxlbWVudDtcbiAgc3R5bGU6IGFueTtcbiAgdGV4dFN0eWxlOiBhbnk7XG4gIHZpZXdQcm9wczogYW55O1xufVxuXG5jb25zdCBOYXZpZ2F0aW9uSGVhZGVyVGl0bGUgPSAoeyBjaGlsZHJlbiwgc3R5bGUsIHRleHRTdHlsZSwgdmlld1Byb3BzIH06IFByb3BzKSA9PiAoXG4gIDxWaWV3IHN0eWxlPXtbIHN0eWxlcy50aXRsZSwgc3R5bGUgXX0gey4uLnZpZXdQcm9wc30+XG4gICAgPFRleHQgc3R5bGU9e1sgc3R5bGVzLnRpdGxlVGV4dCwgdGV4dFN0eWxlIF19PntjaGlsZHJlbn08L1RleHQ+XG4gIDwvVmlldz5cbik7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgdGl0bGU6IHtcbiAgICBmbGV4OiAxLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIG1hcmdpbkhvcml6b250YWw6IDE2XG4gIH0sXG5cbiAgdGl0bGVUZXh0OiB7XG4gICAgZmxleDogMSxcbiAgICBmb250U2l6ZTogMTgsXG4gICAgZm9udFdlaWdodDogJzUwMCcsXG4gICAgY29sb3I6ICdyZ2JhKDAsIDAsIDAsIC45KScsXG4gICAgdGV4dEFsaWduOiBQbGF0Zm9ybS5PUyA9PT0gJ2lvcycgPyAnY2VudGVyJyA6ICdsZWZ0J1xuICB9XG59KTtcblxuTmF2aWdhdGlvbkhlYWRlclRpdGxlLnByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgc3R5bGU6IFZpZXdQcm9wVHlwZXMuc3R5bGUsXG4gIHRleHRTdHlsZTogVGV4dC5wcm9wVHlwZXMuc3R5bGVcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTmF2aWdhdGlvbkhlYWRlclRpdGxlO1xuIl19