626db808111e452c87107bf3b51f382a













'use strict';

var AssetRegistry=require('AssetRegistry');
var AssetSourceResolver=require('AssetSourceResolver');
var NativeModules=require('NativeModules');



var _customSourceTransformer=void 0,_serverURL=void 0,_bundleSourcePath=void 0;

function getDevServerURL(){
if(_serverURL===undefined){
var scriptURL=NativeModules.SourceCode.scriptURL;
var match=scriptURL&&scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL=match[0];
}else{

_serverURL=null;
}
}
return _serverURL;
}

function getBundleSourcePath(){
if(_bundleSourcePath===undefined){
var scriptURL=NativeModules.SourceCode.scriptURL;
if(!scriptURL){

_bundleSourcePath=null;
return _bundleSourcePath;
}
if(scriptURL.startsWith('assets://')){

_bundleSourcePath=null;
return _bundleSourcePath;
}
if(scriptURL.startsWith('file://')){

_bundleSourcePath=scriptURL.substring(7,scriptURL.lastIndexOf('/')+1);
}else{
_bundleSourcePath=scriptURL.substring(0,scriptURL.lastIndexOf('/')+1);
}
}

return _bundleSourcePath;
}

function setCustomSourceTransformer(
transformer)
{
_customSourceTransformer=transformer;
}





function resolveAssetSource(source){
if(typeof source==='object'){
return source;
}

var asset=AssetRegistry.getAssetByID(source);
if(!asset){
return null;
}

var resolver=new AssetSourceResolver(getDevServerURL(),getBundleSourcePath(),asset);
if(_customSourceTransformer){
return _customSourceTransformer(resolver);
}
return resolver.defaultAsset();
}

module.exports=resolveAssetSource;
module.exports.pickScale=AssetSourceResolver.pickScale;
module.exports.setCustomSourceTransformer=setCustomSourceTransformer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVBc3NldFNvdXJjZS5qcyJdLCJuYW1lcyI6WyJBc3NldFJlZ2lzdHJ5IiwicmVxdWlyZSIsIkFzc2V0U291cmNlUmVzb2x2ZXIiLCJOYXRpdmVNb2R1bGVzIiwiX2N1c3RvbVNvdXJjZVRyYW5zZm9ybWVyIiwiX3NlcnZlclVSTCIsIl9idW5kbGVTb3VyY2VQYXRoIiwiZ2V0RGV2U2VydmVyVVJMIiwidW5kZWZpbmVkIiwic2NyaXB0VVJMIiwiU291cmNlQ29kZSIsIm1hdGNoIiwiZ2V0QnVuZGxlU291cmNlUGF0aCIsInN0YXJ0c1dpdGgiLCJzdWJzdHJpbmciLCJsYXN0SW5kZXhPZiIsInNldEN1c3RvbVNvdXJjZVRyYW5zZm9ybWVyIiwidHJhbnNmb3JtZXIiLCJyZXNvbHZlQXNzZXRTb3VyY2UiLCJzb3VyY2UiLCJhc3NldCIsImdldEFzc2V0QnlJRCIsInJlc29sdmVyIiwiZGVmYXVsdEFzc2V0IiwibW9kdWxlIiwiZXhwb3J0cyIsInBpY2tTY2FsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQWFBOztBQUVBLEdBQU1BLGVBQWdCQyxRQUFRLGVBQVIsQ0FBdEI7QUFDQSxHQUFNQyxxQkFBc0JELFFBQVEscUJBQVIsQ0FBNUI7QUFDQSxHQUFNRSxlQUFnQkYsUUFBUSxlQUFSLENBQXRCOzs7O0FBSUEsR0FBSUcsZ0NBQUosQ0FBOEJDLGlCQUE5QixDQUEwQ0Msd0JBQTFDOztBQUVBLFFBQVNDLGdCQUFULEVBQW9DO0FBQ2xDLEdBQUlGLGFBQWVHLFNBQW5CLENBQThCO0FBQzVCLEdBQUlDLFdBQVlOLGNBQWNPLFVBQWQsQ0FBeUJELFNBQXpDO0FBQ0EsR0FBSUUsT0FBUUYsV0FBYUEsVUFBVUUsS0FBVixDQUFnQixtQkFBaEIsQ0FBekI7QUFDQSxHQUFJQSxLQUFKLENBQVc7O0FBRVROLFdBQWFNLE1BQU0sQ0FBTixDQUFiO0FBQ0QsQ0FIRCxJQUdPOztBQUVMTixXQUFhLElBQWI7QUFDRDtBQUNGO0FBQ0QsTUFBT0EsV0FBUDtBQUNEOztBQUVELFFBQVNPLG9CQUFULEVBQXdDO0FBQ3RDLEdBQUlOLG9CQUFzQkUsU0FBMUIsQ0FBcUM7QUFDbkMsR0FBTUMsV0FBWU4sY0FBY08sVUFBZCxDQUF5QkQsU0FBM0M7QUFDQSxHQUFJLENBQUNBLFNBQUwsQ0FBZ0I7O0FBRWRILGtCQUFvQixJQUFwQjtBQUNBLE1BQU9BLGtCQUFQO0FBQ0Q7QUFDRCxHQUFJRyxVQUFVSSxVQUFWLENBQXFCLFdBQXJCLENBQUosQ0FBdUM7O0FBRXJDUCxrQkFBb0IsSUFBcEI7QUFDQSxNQUFPQSxrQkFBUDtBQUNEO0FBQ0QsR0FBSUcsVUFBVUksVUFBVixDQUFxQixTQUFyQixDQUFKLENBQXFDOztBQUVuQ1Asa0JBQW9CRyxVQUFVSyxTQUFWLENBQW9CLENBQXBCLENBQXVCTCxVQUFVTSxXQUFWLENBQXNCLEdBQXRCLEVBQTZCLENBQXBELENBQXBCO0FBQ0QsQ0FIRCxJQUdPO0FBQ0xULGtCQUFvQkcsVUFBVUssU0FBVixDQUFvQixDQUFwQixDQUF1QkwsVUFBVU0sV0FBVixDQUFzQixHQUF0QixFQUE2QixDQUFwRCxDQUFwQjtBQUNEO0FBQ0Y7O0FBRUQsTUFBT1Qsa0JBQVA7QUFDRDs7QUFFRCxRQUFTVSwyQkFBVDtBQUNFQyxXQURGO0FBRVE7QUFDTmIseUJBQTJCYSxXQUEzQjtBQUNEOzs7Ozs7QUFNRCxRQUFTQyxtQkFBVCxDQUE0QkMsTUFBNUIsQ0FBK0Q7QUFDN0QsR0FBSSxNQUFPQSxPQUFQLEdBQWtCLFFBQXRCLENBQWdDO0FBQzlCLE1BQU9BLE9BQVA7QUFDRDs7QUFFRCxHQUFJQyxPQUFRcEIsY0FBY3FCLFlBQWQsQ0FBMkJGLE1BQTNCLENBQVo7QUFDQSxHQUFJLENBQUNDLEtBQUwsQ0FBWTtBQUNWLE1BQU8sS0FBUDtBQUNEOztBQUVELEdBQU1FLFVBQVcsR0FBSXBCLG9CQUFKLENBQXdCSyxpQkFBeEIsQ0FBMkNLLHFCQUEzQyxDQUFrRVEsS0FBbEUsQ0FBakI7QUFDQSxHQUFJaEIsd0JBQUosQ0FBOEI7QUFDNUIsTUFBT0EsMEJBQXlCa0IsUUFBekIsQ0FBUDtBQUNEO0FBQ0QsTUFBT0EsVUFBU0MsWUFBVCxFQUFQO0FBQ0Q7O0FBRURDLE9BQU9DLE9BQVAsQ0FBaUJQLGtCQUFqQjtBQUNBTSxPQUFPQyxPQUFQLENBQWVDLFNBQWYsQ0FBMkJ4QixvQkFBb0J3QixTQUEvQztBQUNBRixPQUFPQyxPQUFQLENBQWVULDBCQUFmLENBQTRDQSwwQkFBNUMiLCJmaWxlIjoicmVzb2x2ZUFzc2V0U291cmNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSByZXNvbHZlQXNzZXRTb3VyY2VcbiAqIEBmbG93XG4gKlxuICogUmVzb2x2ZXMgYW4gYXNzZXQgaW50byBhIGBzb3VyY2VgIGZvciBgSW1hZ2VgLlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFzc2V0UmVnaXN0cnkgPSByZXF1aXJlKCdBc3NldFJlZ2lzdHJ5Jyk7XG5jb25zdCBBc3NldFNvdXJjZVJlc29sdmVyID0gcmVxdWlyZSgnQXNzZXRTb3VyY2VSZXNvbHZlcicpO1xuY29uc3QgTmF0aXZlTW9kdWxlcyA9IHJlcXVpcmUoJ05hdGl2ZU1vZHVsZXMnKTtcblxuaW1wb3J0IHR5cGUgeyBSZXNvbHZlZEFzc2V0U291cmNlIH0gZnJvbSAnQXNzZXRTb3VyY2VSZXNvbHZlcic7XG5cbmxldCBfY3VzdG9tU291cmNlVHJhbnNmb3JtZXIsIF9zZXJ2ZXJVUkwsIF9idW5kbGVTb3VyY2VQYXRoO1xuXG5mdW5jdGlvbiBnZXREZXZTZXJ2ZXJVUkwoKTogP3N0cmluZyB7XG4gIGlmIChfc2VydmVyVVJMID09PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgc2NyaXB0VVJMID0gTmF0aXZlTW9kdWxlcy5Tb3VyY2VDb2RlLnNjcmlwdFVSTDtcbiAgICB2YXIgbWF0Y2ggPSBzY3JpcHRVUkwgJiYgc2NyaXB0VVJMLm1hdGNoKC9eaHR0cHM/OlxcL1xcLy4qP1xcLy8pO1xuICAgIGlmIChtYXRjaCkge1xuICAgICAgLy8gQnVuZGxlIHdhcyBsb2FkZWQgZnJvbSBuZXR3b3JrXG4gICAgICBfc2VydmVyVVJMID0gbWF0Y2hbMF07XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEJ1bmRsZSB3YXMgbG9hZGVkIGZyb20gZmlsZVxuICAgICAgX3NlcnZlclVSTCA9IG51bGw7XG4gICAgfVxuICB9XG4gIHJldHVybiBfc2VydmVyVVJMO1xufVxuXG5mdW5jdGlvbiBnZXRCdW5kbGVTb3VyY2VQYXRoKCk6ID9zdHJpbmcge1xuICBpZiAoX2J1bmRsZVNvdXJjZVBhdGggPT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IHNjcmlwdFVSTCA9IE5hdGl2ZU1vZHVsZXMuU291cmNlQ29kZS5zY3JpcHRVUkw7XG4gICAgaWYgKCFzY3JpcHRVUkwpIHtcbiAgICAgIC8vIHNjcmlwdFVSTCBpcyBmYWxzeSwgd2UgaGF2ZSBub3RoaW5nIHRvIGdvIG9uIGhlcmVcbiAgICAgIF9idW5kbGVTb3VyY2VQYXRoID0gbnVsbDtcbiAgICAgIHJldHVybiBfYnVuZGxlU291cmNlUGF0aDtcbiAgICB9XG4gICAgaWYgKHNjcmlwdFVSTC5zdGFydHNXaXRoKCdhc3NldHM6Ly8nKSkge1xuICAgICAgLy8gcnVubmluZyBmcm9tIHdpdGhpbiBhc3NldHMsIG5vIG9mZmxpbmUgcGF0aCB0byB1c2VcbiAgICAgIF9idW5kbGVTb3VyY2VQYXRoID0gbnVsbDtcbiAgICAgIHJldHVybiBfYnVuZGxlU291cmNlUGF0aDtcbiAgICB9XG4gICAgaWYgKHNjcmlwdFVSTC5zdGFydHNXaXRoKCdmaWxlOi8vJykpIHtcbiAgICAgIC8vIGN1dCBvZmYgdGhlIHByb3RvY29sXG4gICAgICBfYnVuZGxlU291cmNlUGF0aCA9IHNjcmlwdFVSTC5zdWJzdHJpbmcoNywgc2NyaXB0VVJMLmxhc3RJbmRleE9mKCcvJykgKyAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX2J1bmRsZVNvdXJjZVBhdGggPSBzY3JpcHRVUkwuc3Vic3RyaW5nKDAsIHNjcmlwdFVSTC5sYXN0SW5kZXhPZignLycpICsgMSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9idW5kbGVTb3VyY2VQYXRoO1xufVxuXG5mdW5jdGlvbiBzZXRDdXN0b21Tb3VyY2VUcmFuc2Zvcm1lcihcbiAgdHJhbnNmb3JtZXI6IChyZXNvbHZlcjogQXNzZXRTb3VyY2VSZXNvbHZlcikgPT4gUmVzb2x2ZWRBc3NldFNvdXJjZSxcbik6IHZvaWQge1xuICBfY3VzdG9tU291cmNlVHJhbnNmb3JtZXIgPSB0cmFuc2Zvcm1lcjtcbn1cblxuLyoqXG4gKiBgc291cmNlYCBpcyBlaXRoZXIgYSBudW1iZXIgKG9wYXF1ZSB0eXBlIHJldHVybmVkIGJ5IHJlcXVpcmUoJy4vZm9vLnBuZycpKVxuICogb3IgYW4gYEltYWdlU291cmNlYCBsaWtlIHsgdXJpOiAnPGh0dHAgbG9jYXRpb24gfHwgZmlsZSBwYXRoPicgfVxuICovXG5mdW5jdGlvbiByZXNvbHZlQXNzZXRTb3VyY2Uoc291cmNlOiBhbnkpOiA/UmVzb2x2ZWRBc3NldFNvdXJjZSB7XG4gIGlmICh0eXBlb2Ygc291cmNlID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBzb3VyY2U7XG4gIH1cblxuICB2YXIgYXNzZXQgPSBBc3NldFJlZ2lzdHJ5LmdldEFzc2V0QnlJRChzb3VyY2UpO1xuICBpZiAoIWFzc2V0KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCByZXNvbHZlciA9IG5ldyBBc3NldFNvdXJjZVJlc29sdmVyKGdldERldlNlcnZlclVSTCgpLCBnZXRCdW5kbGVTb3VyY2VQYXRoKCksIGFzc2V0KTtcbiAgaWYgKF9jdXN0b21Tb3VyY2VUcmFuc2Zvcm1lcikge1xuICAgIHJldHVybiBfY3VzdG9tU291cmNlVHJhbnNmb3JtZXIocmVzb2x2ZXIpO1xuICB9XG4gIHJldHVybiByZXNvbHZlci5kZWZhdWx0QXNzZXQoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByZXNvbHZlQXNzZXRTb3VyY2U7XG5tb2R1bGUuZXhwb3J0cy5waWNrU2NhbGUgPSBBc3NldFNvdXJjZVJlc29sdmVyLnBpY2tTY2FsZTtcbm1vZHVsZS5leHBvcnRzLnNldEN1c3RvbVNvdXJjZVRyYW5zZm9ybWVyID0gc2V0Q3VzdG9tU291cmNlVHJhbnNmb3JtZXI7XG4iXX0=