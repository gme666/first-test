a409c659616a9de8c1735440f956b98e












'use strict';




function defineLazyObjectProperty(
object,
name,
descriptor)




{var
get=descriptor.get;
var enumerable=descriptor.enumerable!==false;
var writable=descriptor.writable!==false;

var value=void 0;
var valueSet=false;
function getValue(){



if(!valueSet){





valueSet=true;
setValue(get());
}
return value;
}
function setValue(newValue){
value=newValue;
valueSet=true;
Object.defineProperty(object,name,{
value:newValue,
configurable:true,
enumerable:enumerable,
writable:writable});

}

Object.defineProperty(object,name,{
get:getValue,
set:setValue,
configurable:true,
enumerable:enumerable});

}

module.exports=defineLazyObjectProperty;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlZmluZUxhenlPYmplY3RQcm9wZXJ0eS5qcyJdLCJuYW1lcyI6WyJkZWZpbmVMYXp5T2JqZWN0UHJvcGVydHkiLCJvYmplY3QiLCJuYW1lIiwiZGVzY3JpcHRvciIsImdldCIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsInZhbHVlIiwidmFsdWVTZXQiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwibmV3VmFsdWUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsInNldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVlBOzs7OztBQUtBLFFBQVNBLHlCQUFUO0FBQ0VDLE1BREY7QUFFRUMsSUFGRjtBQUdFQyxVQUhGOzs7OztBQVFRO0FBQ0NDLEdBREQsQ0FDUUQsVUFEUixDQUNDQyxHQUREO0FBRU4sR0FBTUMsWUFBYUYsV0FBV0UsVUFBWCxHQUEwQixLQUE3QztBQUNBLEdBQU1DLFVBQVdILFdBQVdHLFFBQVgsR0FBd0IsS0FBekM7O0FBRUEsR0FBSUMsYUFBSjtBQUNBLEdBQUlDLFVBQVcsS0FBZjtBQUNBLFFBQVNDLFNBQVQsRUFBdUI7Ozs7QUFJckIsR0FBSSxDQUFDRCxRQUFMLENBQWU7Ozs7OztBQU1iQSxTQUFXLElBQVg7QUFDQUUsU0FBU04sS0FBVDtBQUNEO0FBQ0QsTUFBT0csTUFBUDtBQUNEO0FBQ0QsUUFBU0csU0FBVCxDQUFrQkMsUUFBbEIsQ0FBcUM7QUFDbkNKLE1BQVFJLFFBQVI7QUFDQUgsU0FBVyxJQUFYO0FBQ0FJLE9BQU9DLGNBQVAsQ0FBc0JaLE1BQXRCLENBQThCQyxJQUE5QixDQUFvQztBQUNsQ0ssTUFBT0ksUUFEMkI7QUFFbENHLGFBQWMsSUFGb0I7QUFHbENULHFCQUhrQztBQUlsQ0MsaUJBSmtDLENBQXBDOztBQU1EOztBQUVETSxPQUFPQyxjQUFQLENBQXNCWixNQUF0QixDQUE4QkMsSUFBOUIsQ0FBb0M7QUFDbENFLElBQUtLLFFBRDZCO0FBRWxDTSxJQUFLTCxRQUY2QjtBQUdsQ0ksYUFBYyxJQUhvQjtBQUlsQ1QscUJBSmtDLENBQXBDOztBQU1EOztBQUVEVyxPQUFPQyxPQUFQLENBQWlCakIsd0JBQWpCIiwiZmlsZSI6ImRlZmluZUxhenlPYmplY3RQcm9wZXJ0eS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgZGVmaW5lTGF6eU9iamVjdFByb3BlcnR5XG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZWZpbmVzIGEgbGF6aWx5IGV2YWx1YXRlZCBwcm9wZXJ0eSBvbiB0aGUgc3VwcGxpZWQgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGRlZmluZUxhenlPYmplY3RQcm9wZXJ0eTxUPihcbiAgb2JqZWN0OiBPYmplY3QsXG4gIG5hbWU6IHN0cmluZyxcbiAgZGVzY3JpcHRvcjoge1xuICAgIGdldDogKCkgPT4gVCxcbiAgICBlbnVtZXJhYmxlPzogYm9vbGVhbixcbiAgICB3cml0YWJsZT86IGJvb2xlYW4sXG4gIH0sXG4pOiB2b2lkIHtcbiAgY29uc3Qge2dldH0gPSBkZXNjcmlwdG9yO1xuICBjb25zdCBlbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlICE9PSBmYWxzZTtcbiAgY29uc3Qgd3JpdGFibGUgPSBkZXNjcmlwdG9yLndyaXRhYmxlICE9PSBmYWxzZTtcblxuICBsZXQgdmFsdWU7XG4gIGxldCB2YWx1ZVNldCA9IGZhbHNlO1xuICBmdW5jdGlvbiBnZXRWYWx1ZSgpOiBUIHtcbiAgICAvLyBXT1JLQVJPVU5EOiBBIHdlaXJkIGluZmluaXRlIGxvb3Agb2NjdXJzIHdoZXJlIGNhbGxpbmcgYGdldFZhbHVlYCBjYWxsc1xuICAgIC8vIGBzZXRWYWx1ZWAgd2hpY2ggY2FsbHMgYE9iamVjdC5kZWZpbmVQcm9wZXJ0eWAgd2hpY2ggc29tZWhvdyB0cmlnZ2Vyc1xuICAgIC8vIGBnZXRWYWx1ZWAgYWdhaW4uIEFkZGluZyBgdmFsdWVTZXRgIGJyZWFrcyB0aGlzIGxvb3AuXG4gICAgaWYgKCF2YWx1ZVNldCkge1xuICAgICAgLy8gQ2FsbGluZyBgZ2V0KClgIGhlcmUgY2FuIHRyaWdnZXIgYW4gaW5maW5pdGUgbG9vcCBpZiBpdCBmYWlscyB0b1xuICAgICAgLy8gcmVtb3ZlIHRoZSBnZXR0ZXIgb24gdGhlIHByb3BlcnR5LCB3aGljaCBjYW4gaGFwcGVuIHdoZW4gZXhlY3V0aW5nXG4gICAgICAvLyBKUyBpbiBhIFY4IGNvbnRleHQuICBgdmFsdWVTZXQgPSB0cnVlYCB3aWxsIGJyZWFrIHRoaXMgbG9vcCwgYW5kXG4gICAgICAvLyBzZXRzIHRoZSB2YWx1ZSBvZiB0aGUgcHJvcGVydHkgdG8gdW5kZWZpbmVkLCB1bnRpbCB0aGUgY29kZSBpbiBgZ2V0KClgXG4gICAgICAvLyBmaW5pc2hlcywgYXQgd2hpY2ggcG9pbnQgdGhlIHByb3BlcnR5IGlzIHNldCB0byB0aGUgY29ycmVjdCB2YWx1ZS5cbiAgICAgIHZhbHVlU2V0ID0gdHJ1ZTtcbiAgICAgIHNldFZhbHVlKGdldCgpKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIHNldFZhbHVlKG5ld1ZhbHVlOiBUKTogdm9pZCB7XG4gICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICB2YWx1ZVNldCA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgbmFtZSwge1xuICAgICAgdmFsdWU6IG5ld1ZhbHVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgZW51bWVyYWJsZSxcbiAgICAgIHdyaXRhYmxlLFxuICAgIH0pO1xuICB9XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgbmFtZSwge1xuICAgIGdldDogZ2V0VmFsdWUsXG4gICAgc2V0OiBzZXRWYWx1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZW51bWVyYWJsZSxcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmaW5lTGF6eU9iamVjdFByb3BlcnR5O1xuIl19