3e9e49f4993b4fa7c9942540751e28ab



























'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};

var React=require('react');
var ReactNative=require('react-native');var


Platform=



ReactNative.Platform,StyleSheet=ReactNative.StyleSheet,View=ReactNative.View,Text=ReactNative.Text;








var NavigationHeaderTitle=function NavigationHeaderTitle(_ref){var children=_ref.children,style=_ref.style,textStyle=_ref.textStyle,viewProps=_ref.viewProps;return(
React.createElement(View,_extends({style:[styles.title,style]},viewProps),
React.createElement(Text,{style:[styles.titleText,textStyle]},children)));};



var styles=StyleSheet.create({
title:{
flex:1,
flexDirection:'row',
alignItems:'center',
marginHorizontal:16},


titleText:{
flex:1,
fontSize:18,
fontWeight:'500',
color:'rgba(0, 0, 0, .9)',
textAlign:Platform.OS==='ios'?'center':'left'}});



NavigationHeaderTitle.propTypes={
children:React.PropTypes.string.isRequired,
style:View.propTypes.style,
textStyle:Text.propTypes.style};


module.exports=NavigationHeaderTitle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdmlnYXRpb25IZWFkZXJUaXRsZS5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJSZWFjdE5hdGl2ZSIsIlBsYXRmb3JtIiwiU3R5bGVTaGVldCIsIlZpZXciLCJUZXh0IiwiTmF2aWdhdGlvbkhlYWRlclRpdGxlIiwiY2hpbGRyZW4iLCJzdHlsZSIsInRleHRTdHlsZSIsInZpZXdQcm9wcyIsInN0eWxlcyIsInRpdGxlIiwidGl0bGVUZXh0IiwiY3JlYXRlIiwiZmxleCIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwibWFyZ2luSG9yaXpvbnRhbCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImNvbG9yIiwidGV4dEFsaWduIiwiT1MiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBLGE7O0FBRUEsR0FBTUEsT0FBUUMsUUFBUSxPQUFSLENBQWQ7QUFDQSxHQUFNQyxhQUFjRCxRQUFRLGNBQVIsQ0FBcEIsQzs7O0FBR0VFLFE7Ozs7QUFJRUQsVyxDQUpGQyxRLENBQ0FDLFUsQ0FHRUYsVyxDQUhGRSxVLENBQ0FDLEksQ0FFRUgsVyxDQUZGRyxJLENBQ0FDLEksQ0FDRUosVyxDQURGSSxJOzs7Ozs7Ozs7QUFVRixHQUFNQyx1QkFBd0IsUUFBeEJBLHNCQUF3QixVQUFHQyxTQUFILE1BQUdBLFFBQUgsQ0FBYUMsS0FBYixNQUFhQSxLQUFiLENBQW9CQyxTQUFwQixNQUFvQkEsU0FBcEIsQ0FBK0JDLFNBQS9CLE1BQStCQSxTQUEvQjtBQUM1QixvQkFBQyxJQUFELFdBQU0sTUFBTyxDQUFFQyxPQUFPQyxLQUFULENBQWdCSixLQUFoQixDQUFiLEVBQTBDRSxTQUExQztBQUNFLG9CQUFDLElBQUQsRUFBTSxNQUFPLENBQUVDLE9BQU9FLFNBQVQsQ0FBb0JKLFNBQXBCLENBQWIsRUFBK0NGLFFBQS9DLENBREYsQ0FENEIsR0FBOUI7Ozs7QUFNQSxHQUFNSSxRQUFTUixXQUFXVyxNQUFYLENBQWtCO0FBQy9CRixNQUFPO0FBQ0xHLEtBQU0sQ0FERDtBQUVMQyxjQUFlLEtBRlY7QUFHTEMsV0FBWSxRQUhQO0FBSUxDLGlCQUFrQixFQUpiLENBRHdCOzs7QUFRL0JMLFVBQVc7QUFDVEUsS0FBTSxDQURHO0FBRVRJLFNBQVUsRUFGRDtBQUdUQyxXQUFZLEtBSEg7QUFJVEMsTUFBTyxtQkFKRTtBQUtUQyxVQUFXcEIsU0FBU3FCLEVBQVQsR0FBZ0IsS0FBaEIsQ0FBd0IsUUFBeEIsQ0FBbUMsTUFMckMsQ0FSb0IsQ0FBbEIsQ0FBZjs7OztBQWlCQWpCLHNCQUFzQmtCLFNBQXRCLENBQWtDO0FBQ2hDakIsU0FBVVIsTUFBTTBCLFNBQU4sQ0FBZ0JDLE1BQWhCLENBQXVCQyxVQUREO0FBRWhDbkIsTUFBT0osS0FBS29CLFNBQUwsQ0FBZWhCLEtBRlU7QUFHaENDLFVBQVdKLEtBQUttQixTQUFMLENBQWVoQixLQUhNLENBQWxDOzs7QUFNQW9CLE9BQU9DLE9BQVAsQ0FBaUJ2QixxQkFBakIiLCJmaWxlIjoiTmF2aWdhdGlvbkhlYWRlclRpdGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUsIEZhY2Vib29rLCBJbmMuICBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIEZhY2Vib29rLCBJbmMuIChcIkZhY2Vib29rXCIpIG93bnMgYWxsIHJpZ2h0LCB0aXRsZSBhbmQgaW50ZXJlc3QsIGluY2x1ZGluZ1xuICogYWxsIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBhbmQgb3RoZXIgcHJvcHJpZXRhcnkgcmlnaHRzLCBpbiBhbmQgdG8gdGhlIFJlYWN0XG4gKiBOYXRpdmUgQ3VzdG9tQ29tcG9uZW50cyBzb2Z0d2FyZSAodGhlIFwiU29mdHdhcmVcIikuICBTdWJqZWN0IHRvIHlvdXJcbiAqIGNvbXBsaWFuY2Ugd2l0aCB0aGVzZSB0ZXJtcywgeW91IGFyZSBoZXJlYnkgZ3JhbnRlZCBhIG5vbi1leGNsdXNpdmUsXG4gKiB3b3JsZHdpZGUsIHJveWFsdHktZnJlZSBjb3B5cmlnaHQgbGljZW5zZSB0byAoMSkgdXNlIGFuZCBjb3B5IHRoZSBTb2Z0d2FyZTtcbiAqIGFuZCAoMikgcmVwcm9kdWNlIGFuZCBkaXN0cmlidXRlIHRoZSBTb2Z0d2FyZSBhcyBwYXJ0IG9mIHlvdXIgb3duIHNvZnR3YXJlXG4gKiAoXCJZb3VyIFNvZnR3YXJlXCIpLiAgRmFjZWJvb2sgcmVzZXJ2ZXMgYWxsIHJpZ2h0cyBub3QgZXhwcmVzc2x5IGdyYW50ZWQgdG9cbiAqIHlvdSBpbiB0aGlzIGxpY2Vuc2UgYWdyZWVtZW50LlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBBTkQgRE9DVU1FTlRBVElPTiwgSUYgQU5ZLCBBUkUgUFJPVklERUQgXCJBUyBJU1wiIEFORCBBTlkgRVhQUkVTU1xuICogT1IgSU1QTElFRCBXQVJSQU5USUVTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFU1xuICogT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSkgQVJFIERJU0NMQUlNRUQuXG4gKiBJTiBOTyBFVkVOVCBTSEFMTCBGQUNFQk9PSyBPUiBJVFMgQUZGSUxJQVRFUywgT0ZGSUNFUlMsIERJUkVDVE9SUyBPUlxuICogRU1QTE9ZRUVTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsXG4gKiBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sXG4gKiBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUztcbiAqIE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLFxuICogV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1JcbiAqIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRIRSBTT0ZUV0FSRSwgRVZFTiBJRlxuICogQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIE5hdmlnYXRpb25IZWFkZXJUaXRsZVxuICogQGZsb3dcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBSZWFjdE5hdGl2ZSA9IHJlcXVpcmUoJ3JlYWN0LW5hdGl2ZScpO1xuXG5jb25zdCB7XG4gIFBsYXRmb3JtLFxuICBTdHlsZVNoZWV0LFxuICBWaWV3LFxuICBUZXh0LFxufSA9IFJlYWN0TmF0aXZlO1xuXG50eXBlIFByb3BzID0ge1xuICBjaGlsZHJlbjogUmVhY3RFbGVtZW50O1xuICBzdHlsZTogYW55O1xuICB0ZXh0U3R5bGU6IGFueTtcbiAgdmlld1Byb3BzOiBhbnk7XG59XG5cbmNvbnN0IE5hdmlnYXRpb25IZWFkZXJUaXRsZSA9ICh7IGNoaWxkcmVuLCBzdHlsZSwgdGV4dFN0eWxlLCB2aWV3UHJvcHMgfTogUHJvcHMpID0+IChcbiAgPFZpZXcgc3R5bGU9e1sgc3R5bGVzLnRpdGxlLCBzdHlsZSBdfSB7Li4udmlld1Byb3BzfT5cbiAgICA8VGV4dCBzdHlsZT17WyBzdHlsZXMudGl0bGVUZXh0LCB0ZXh0U3R5bGUgXX0+e2NoaWxkcmVufTwvVGV4dD5cbiAgPC9WaWV3PlxuKTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICB0aXRsZToge1xuICAgIGZsZXg6IDEsXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgbWFyZ2luSG9yaXpvbnRhbDogMTZcbiAgfSxcblxuICB0aXRsZVRleHQ6IHtcbiAgICBmbGV4OiAxLFxuICAgIGZvbnRTaXplOiAxOCxcbiAgICBmb250V2VpZ2h0OiAnNTAwJyxcbiAgICBjb2xvcjogJ3JnYmEoMCwgMCwgMCwgLjkpJyxcbiAgICB0ZXh0QWxpZ246IFBsYXRmb3JtLk9TID09PSAnaW9zJyA/ICdjZW50ZXInIDogJ2xlZnQnXG4gIH1cbn0pO1xuXG5OYXZpZ2F0aW9uSGVhZGVyVGl0bGUucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBzdHlsZTogVmlldy5wcm9wVHlwZXMuc3R5bGUsXG4gIHRleHRTdHlsZTogVGV4dC5wcm9wVHlwZXMuc3R5bGVcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTmF2aWdhdGlvbkhlYWRlclRpdGxlO1xuIl19